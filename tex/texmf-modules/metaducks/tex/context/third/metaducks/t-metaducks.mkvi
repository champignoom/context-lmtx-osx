%D \module
%D   [     file=t-metaducks,
%D      version=2021.01.21,
%D        title=\CONTEXT\ User Module,
%D     subtitle=Ducks for ConTeXt!,
%D       author=Jairo A. del Rio,
%D         date=\currentdate,
%D    copyright=Jairo A. del Rio,
%D        email=jairoadelrio6@gmail.com,
%D      license=GNU General Public License v3]

%C Copyright (C) 2020 Jairo A. del Rio
%C
%C This program is free software; you can redistribute it and/or modify
%C it under the terms of the GNU General Public License as published by
%C the Free Software Foundation; either version 3 of the License, or
%C (at your option) any later version.
%C
%C This program is distributed in the hope that it will be useful,
%C but WITHOUT ANY WARRANTY; without even the implied warranty of
%C MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%C GNU General Public License for more details.
%C
%C You should have received a copy of the GNU General Public License
%C along with this program; if not, write to the Free Software Foundation,
%C Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA

%D Thanks to Sam Carter for the nice module. 
%D 
%D Stripes are yet unsupported. I don't see a motivation as I don't
%D like football AT ALL, but some users do. Something to do willy nilly.
%D
\writestatus{loading}{Ducks for ConTeXt!}

\startmodule[metaducks]

%D I best leave this. ConTeXt colors are different.
\usecolors[xcolor]

\unprotect

\installnamespace                     {ducks}
\installsimplecommandhandler\????ducks{ducks}\????ducks

%D Setups go first so color definitions refer to them.
\setupducks
[
    unitsize=1cm,
    color=ducks:color,
    bodycolor={\ducksparameter{color}},
    headcolor={\ducksparameter{bodycolor}},
    billcolor=ducks:bill,
    eyecolor=ducks:eye,
    pupilcolor=xcolorblack,
    wingcolor={\ducksparameter{bodycolor}},
    pupilcolor=xcolorblack,
    watercolor=xcolorblue,
    sheepcolor={\ducksparameter{bodycolor}},
    devilcolor=xcolorred,
    conicalhatcolor=ducks:conicalhat,
    maskcolor=xcolorblack,
    tshirtcolor=xcolorwhite,
    jacketcolor=xcolorblue,
    capecolor=xcolorred,
    aodaicolor=ducks:aodai,
    tiecolor=xcolorblack,
    lapelcolor=xcolorblack,
    bowtiecolor=xcolorblack,
    necklacecolor=ducks:necklace,
    neckerchiefcolor=xcolorbrown,
    buttonscolor=xcolorblack,
    woggle=ducks:woggle,
    haircolor=xcolorbrown,
    eyebrowcolor={\ducksparameter{haircolor}},
    beardcolor={\ducksparameter{haircolor}},
    aliencolor=xcolorgreen,
    hatcolor=xcolorbrown,
    capcolor=xcolorblue,
    santacolor=ducks:santa,
    chefcolor=ducks:chef,
    graduatecolor=xcolorblack,
    tassel=xcolorred,
    beretcolor=xcolorblack,
    unicorncolor=xcolorpink,
    witchcolor=xcolorblack,
    crowncolor=xcoloryellow,
    queencrowncolor=xcoloryellow,
    kingcrowncolor=xcolorgray,
    bunnycolor={\ducksparameter{bodycolor}},
    inear=ducks:inear,
    peakedcapcolor=xcolorblue,
    tophatcolor=xcolorblack,
    darthvadercolor=xcolorblack,
    harlequincolor=xcolorblue,
    niuqelrah=xcolorred,
    strawhatcolor=ducks:strawhat,
    ribbon=xcolorwhite,
    helmetcolor=xcolorgray,
    vikingcolor=xcolorgray,
    sailorcolor=ducks:sailor,
    sunglassescolor=xcolorblack,
    glassescolor=xcolorblack,
    squareglassescolor=xcolorblack,
    icecreamcolor=ducks:icecream,
    flavora=ducks:flavora,
    flavorb=ducks:flavorb,
    flavorc=ducks:flavorc,
    bookcolor=xcolorbrown,
    booktext={},
    speechtext={},
    bubblecolor=ducks:bubble,
    signcolor=ducks:sign,
    signtext={},
    signtextcolor=xcolorwhite,
    signback=ducks:signback,
    thinktext={},
    cricketcolor=ducks:cricket,
    rollingpincolor=ducks:rollingpin,
    lightsabercolor=xcolorgreen,
    torchcolor=xcolorgray,
    cakecolor=xcolorviolet,
    hockeycolor=ducks:hockey,
    baguettecolor=xcolorbrown,
    footballcolor=xcolorwhite,
    milkshakecolor=ducks:milkshake,
    winecolor=ducks:wine,
    prisoncolor=xcolorgray,
    basketcolor=ducks:basket,
    eastercolor=xcolorbrown,
    egga=xcolorblue,
    eggb=xcolorgreen,
    eggc=xcolorred,
    handbagcolor=ducks:handbag,
    snowduckcolor=ducks:snowduck,
    vampirecolor=ducks:vampire,
    horsetailcolor={\ducksparameter{haircolor}},
    croziercolor=xcolorbrown,
    stethoscopecolor=xcolorgray,
    crystalballcolor=xcolorcyan,
    cheesecolor=xcolororange,
    shovelcolor=xcolorgray,
    pickaxecolor=xcolorgray,
    umbrellacolor=xcolorcyan,
    umbrellaclosedcolor={\ducksparameter{umbrellacolor}},
    mugcolor=xcolorred,
    shieldcolor=xcolorblack,
    chullocolor=xcolororange,
    carunclecolor=xcolorred,
    blushcolor=xcolorpink,
    backgroundhook=,
    hairhook=,
    clothinghook=,
    bodyhook=,
    foregroundhook=,
]

%D Color definitions need to be global after all.
\defineintermediatecolor[ducks:color]     [.70,xcolorbrown,xcoloryellow]
\defineintermediatecolor[ducks:bill]      [.50,xcolororange,xcolorbrown]
\defineintermediatecolor[ducks:eye]       [.85,xcoloryellow,xcolorwhite]
\defineintermediatecolor[ducks:aodai]     [.50,xcolorblue,xcolorblack]
\defineintermediatecolor[ducks:necklace]  [.80,xcolorgray,xcolorwhite]
\defineintermediatecolor[ducks:woggle]    [.80,xcolorbrown,xcolorblack]
\defineintermediatecolor[ducks:santa]     [.80,xcolorblack,xcolorred]
\defineintermediatecolor[ducks:chef]      [.50,xcolorgray,xcolorwhite]
\defineintermediatecolor[ducks:inear]     [.50,xcolorwhite,\ducksparameter{color}]
\defineintermediatecolor[ducks:strawhat]  [.30,xcolorgray,xcolorwhite]
\defineintermediatecolor[ducks:sailor]    [.80,xcolorgray,xcolorwhite]
\defineintermediatecolor[ducks:bubble]    [.30,xcolorgray,xcolorwhite]
\defineintermediatecolor[ducks:icecream]  [.60,xcolorgray,xcolorbrown]
\defineintermediatecolor[ducks:flavora]   [.50,xcolorbrown,xcolorblack]
\defineintermediatecolor[ducks:flavorb]   [.70,xcolorwhite,xcolorbrown]
\defineintermediatecolor[ducks:flavorc]   [.50,xcolorred,xcolorwhite]
\defineintermediatecolor[ducks:sign]      [.50,xcolorbrown,xcolorblack]
\defineintermediatecolor[ducks:signback]  [.40,xcolorblack,xcolorgreen]
\defineintermediatecolor[ducks:cricket]   [.50,xcolorblack,xcolorred]
\defineintermediatecolor[ducks:rollingpin][.80,xcolorblack,xcolorbrown]
\defineintermediatecolor[ducks:hockey]    [.70,xcolorblack,xcolorbrown]
\defineintermediatecolor[ducks:milkshake] [.20,xcolorwhite,xcolorred]
\defineintermediatecolor[ducks:wine]      [.70,xcolorblack,xcolorred]
\defineintermediatecolor[ducks:basket]    [.70,xcolorgray,xcolorbrown]
\defineintermediatecolor[ducks:handbag]   [.70,xcolorblack,xcolorred]
\defineintermediatecolor[ducks:snowduck]  [.15,xcolorwhite,xcolorgray]
\defineintermediatecolor[ducks:vampire]   [.85,xcoloryellow,xcolorwhite]
\definecolor            [ducks:conicalhat][r=0.7975,g=0.55,b=0.3025]

%D Initializations at the TeX end
\newconditional\c_ducks_wing
\newconditional\c_ducks_grumpy
\newconditional\c_ducks_laughing
\newconditional\c_ducks_parrot
\newconditional\c_ducks_water
\newconditional\c_ducks_sheep
\newconditional\c_ducks_devil
\newconditional\c_ducks_conicalhat
\newconditional\c_ducks_mask
\newconditional\c_ducks_clothing
\newconditional\c_ducks_tshirt
\newconditional\c_ducks_jacket
\newconditional\c_ducks_cape
\newconditional\c_ducks_aodai
\newconditional\c_ducks_tie
\newconditional\c_ducks_lapel
\newconditional\c_ducks_bowtie
\newconditional\c_ducks_necklace
\newconditional\c_ducks_neckerchief
\newconditional\c_ducks_buttons
\newconditional\c_ducks_hair
\newconditional\c_ducks_shorthair
\newconditional\c_ducks_longhair
\newconditional\c_ducks_crazyhair
\newconditional\c_ducks_recedinghair
\newconditional\c_ducks_mohican
\newconditional\c_ducks_mullet
\newconditional\c_ducks_parting
\newconditional\c_ducks_eyebrow
\newconditional\c_ducks_beard
\newconditional\c_ducks_alien
\newconditional\c_ducks_hat
\newconditional\c_ducks_cap
\newconditional\c_ducks_santa
\newconditional\c_ducks_chef
\newconditional\c_ducks_graduate
\newconditional\c_ducks_beret
\newconditional\c_ducks_unicorn
\newconditional\c_ducks_witch
\newconditional\c_ducks_crown
\newconditional\c_ducks_queencrown
\newconditional\c_ducks_kingcrown
\newconditional\c_ducks_bunny
\newconditional\c_ducks_peakedcap
\newconditional\c_ducks_tophat
\newconditional\c_ducks_darthvader
\newconditional\c_ducks_harlequin
\newconditional\c_ducks_strawhat
\newconditional\c_ducks_helmet
\newconditional\c_ducks_viking
\newconditional\c_ducks_sailor
\newconditional\c_ducks_sunglasses
\newconditional\c_ducks_glasses
\newconditional\c_ducks_squareglasses
\newconditional\c_ducks_icecream
\newconditional\c_ducks_book
\newconditional\c_ducks_speech
\newconditional\c_ducks_signpost
\newconditional\c_ducks_think
\newconditional\c_ducks_magicwand
\newconditional\c_ducks_cricket
\newconditional\c_ducks_rollingpin
\newconditional\c_ducks_lightsaber
\newconditional\c_ducks_torch
\newconditional\c_ducks_cake
\newconditional\c_ducks_pizza
\newconditional\c_ducks_hockey
\newconditional\c_ducks_baguette
\newconditional\c_ducks_football
\newconditional\c_ducks_milkshake
\newconditional\c_ducks_wine
\newconditional\c_ducks_prison
\newconditional\c_ducks_basket
\newconditional\c_ducks_easter
\newconditional\c_ducks_handbag
\newconditional\c_ducks_cocktail
\newconditional\c_ducks_snowduck
\newconditional\c_ducks_vampire
\newconditional\c_ducks_horsetail
\newconditional\c_ducks_crozier
\newconditional\c_ducks_stethoscope
\newconditional\c_ducks_crystalball
\newconditional\c_ducks_cheese
\newconditional\c_ducks_shovel
\newconditional\c_ducks_pickaxe
\newconditional\c_ducks_umbrella
\newconditional\c_ducks_umbrellaclosed
\newconditional\c_ducks_overleaf
\newconditional\c_ducks_mug
\newconditional\c_ducks_shield
\newconditional\c_ducks_chullo
\newconditional\c_ducks_lei
\newconditional\c_ducks_caruncle
\newconditional\c_ducks_blush
\startsetups ducks:initialize
    \doifelse{\ducksparameter{wing}}      \v!yes\settrue\setfalse\c_ducks_wing
    \doifelse{\ducksparameter{grumpy}}    \v!yes\settrue\setfalse\c_ducks_grumpy
    \doifelse{\ducksparameter{laughing}}  \v!yes\settrue\setfalse\c_ducks_laughing
    \doifelse{\ducksparameter{parrot}}    \v!yes\settrue\setfalse\c_ducks_parrot
    \doifelse{\ducksparameter{water}}     \v!yes\settrue\setfalse\c_ducks_water
    \doifelse{\ducksparameter{sheep}}     \v!yes\settrue\setfalse\c_ducks_sheep
    \doifelse{\ducksparameter{devil}}     \v!yes\settrue\setfalse\c_ducks_devil
    \doifelse{\ducksparameter{conicalhat}}\v!yes\settrue\setfalse\c_ducks_conicalhat
    \doifelse{\ducksparameter{mask}}      \v!yes\settrue\setfalse\c_ducks_mask

    \doifelse{\ducksparameter{tshirt}}\v!yes {
        \settrue\c_ducks_tshirt
        \settrue\c_ducks_clothing
    } {
        \setfalse\c_ducks_tshirt}
    \doifelse{\ducksparameter{jacket}}\v!yes {
        \settrue\c_ducks_jacket
        \settrue\c_ducks_clothing
    } {
        \setfalse\c_ducks_jacket
    }
    \doifelse{\ducksparameter{cape}}\v!yes {
        \settrue\c_ducks_cape
        \settrue\c_ducks_clothing
    } {
        \setfalse\c_ducks_cape
    }
    \doifelse{\ducksparameter{aodai}}\v!yes {
        \settrue\c_ducks_aodai
        \settrue\c_ducks_clothing
    } {
        \setfalse\c_ducks_aodai
    }

    \doifelse{\ducksparameter{tie}}        \v!yes\settrue\setfalse\c_ducks_tie
    \doifelse{\ducksparameter{lapel}}      \v!yes\settrue\setfalse\c_ducks_lapel
    \doifelse{\ducksparameter{bowtie}}     \v!yes\settrue\setfalse\c_ducks_bowtie
    \doifelse{\ducksparameter{necklace}}   \v!yes\settrue\setfalse\c_ducks_necklace
    \doifelse{\ducksparameter{neckerchief}}\v!yes\settrue\setfalse\c_ducks_neckerchief
    \doifelse{\ducksparameter{buttons}}    \v!yes\settrue\setfalse\c_ducks_buttons

    \doifelse{\ducksparameter{shorthair}}\v!yes {
        \settrue\c_ducks_shorthair
        \settrue\c_ducks_hair
    } {
        \setfalse\c_ducks_shorthair
    }
    \doifelse{\ducksparameter{longhair}}\v!yes {
        \settrue\c_ducks_longhair
        \settrue\c_ducks_hair
    } {
        \setfalse\c_ducks_longhair
    }
    \doifelse{\ducksparameter{crazyhair}}\v!yes {
        \settrue\c_ducks_crazyhair
        \settrue\c_ducks_hair
    } {
        \setfalse\c_ducks_crazyhair
    }
    \doifelse{\ducksparameter{recedinghair}}\v!yes {
        \settrue\c_ducks_recedinghair
        \settrue\c_ducks_hair
    } {
        \setfalse\c_ducks_recedinghair
    }
    \doifelse{\ducksparameter{mohican}}\v!yes {
        \settrue\c_ducks_mohican
        \settrue\c_ducks_hair
    } {
        \setfalse\c_ducks_mohican
    }
    \doifelse{\ducksparameter{mullet}}\v!yes {
        \settrue\c_ducks_mullet
        \settrue\c_ducks_hair
    } {
        \setfalse\c_ducks_mullet
    }
    \doifelse{\ducksparameter{parting}}\v!yes {
        \settrue\c_ducks_parting
        \settrue\c_ducks_hair
    } {
        \setfalse\c_ducks_parting
    }
    \doifelse{\ducksparameter{eyebrow}}   \v!yes\settrue\setfalse\c_ducks_eyebrow
    \doifelse{\ducksparameter{beard}}     \v!yes\settrue\setfalse\c_ducks_beard
    \doifelse{\ducksparameter{alien}}     \v!yes\settrue\setfalse\c_ducks_alien
    \doifelse{\ducksparameter{hat}}       \v!yes\settrue\setfalse\c_ducks_hat
    \doifelse{\ducksparameter{cap}}       \v!yes\settrue\setfalse\c_ducks_cap
    \doifelse{\ducksparameter{santa}}     \v!yes\settrue\setfalse\c_ducks_santa
    \doifelse{\ducksparameter{chef}}      \v!yes\settrue\setfalse\c_ducks_chef
    \doifelse{\ducksparameter{graduate}}  \v!yes\settrue\setfalse\c_ducks_graduate
    \doifelse{\ducksparameter{beret}}     \v!yes\settrue\setfalse\c_ducks_beret
    \doifelse{\ducksparameter{unicorn}}   \v!yes\settrue\setfalse\c_ducks_unicorn
    \doifelse{\ducksparameter{witch}}     \v!yes\settrue\setfalse\c_ducks_witch
    \doifelse{\ducksparameter{crown}}     \v!yes\settrue\setfalse\c_ducks_crown
    \doifelse{\ducksparameter{queencrown}}\v!yes\settrue\setfalse\c_ducks_queencrown
    \doifelse{\ducksparameter{kingcrown}} \v!yes\settrue\setfalse\c_ducks_kingcrown
    \doifelse{\ducksparameter{bunny}}     \v!yes\settrue\setfalse\c_ducks_bunny
    \doifelse{\ducksparameter{peakedcap}} \v!yes\settrue\setfalse\c_ducks_peakedcap
    \doifelse{\ducksparameter{tophat}}    \v!yes\settrue\setfalse\c_ducks_tophat
    \doifelse{\ducksparameter{darthvader}}\v!yes\settrue\setfalse\c_ducks_darthvader
    \doifelse{\ducksparameter{harlequin}} \v!yes\settrue\setfalse\c_ducks_harlequin
    \doifelse{\ducksparameter{strawhat}}  \v!yes\settrue\setfalse\c_ducks_strawhat
    \doifelse{\ducksparameter{helmet}}    \v!yes\settrue\setfalse\c_ducks_helmet

    \doifelse{\ducksparameter{viking}}\v!yes {
        \settrue\c_ducks_viking
        \settrue\c_ducks_devil
    } {
        \setfalse\c_ducks_viking
    }
    \doifelse{\ducksparameter{sailor}}       \v!yes\settrue\setfalse\c_ducks_sailor
    \doifelse{\ducksparameter{sunglasses}}   \v!yes\settrue\setfalse\c_ducks_sunglasses
    \doifelse{\ducksparameter{glasses}}      \v!yes\settrue\setfalse\c_ducks_glasses
    \doifelse{\ducksparameter{squareglasses}}\v!yes\settrue\setfalse\c_ducks_squareglasses
    \doifelse{\ducksparameter{icecream}}     \v!yes\settrue\setfalse\c_ducks_icecream
    \doifelse{\ducksparameter{book}}         \v!yes\settrue\setfalse\c_ducks_book
    \doifelse{\ducksparameter{speech}}       \v!yes\settrue\setfalse\c_ducks_speech
    \doifelse{\ducksparameter{signpost}}     \v!yes\settrue\setfalse\c_ducks_signpost
    \doifelse{\ducksparameter{think}}        \v!yes\settrue\setfalse\c_ducks_think
    \doifelse{\ducksparameter{magicwand}}    \v!yes\settrue\setfalse\c_ducks_magicwand
    \doifelse{\ducksparameter{cricket}}      \v!yes\settrue\setfalse\c_ducks_cricket
    \doifelse{\ducksparameter{rollingpin}}   \v!yes\settrue\setfalse\c_ducks_rollingpin
    \doifelse{\ducksparameter{lightsaber}}   \v!yes\settrue\setfalse\c_ducks_lightsaber
    \doifelse{\ducksparameter{torch}}        \v!yes\settrue\setfalse\c_ducks_torch
    \doifelse{\ducksparameter{cake}}         \v!yes\settrue\setfalse\c_ducks_cake
    \doifelse{\ducksparameter{pizza}}        \v!yes\settrue\setfalse\c_ducks_pizza
    \doifelse{\ducksparameter{hockey}}       \v!yes\settrue\setfalse\c_ducks_hockey
    \doifelse{\ducksparameter{baguette}}     \v!yes\settrue\setfalse\c_ducks_baguette
    \doifelse{\ducksparameter{football}}     \v!yes\settrue\setfalse\c_ducks_football
    \doifelse{\ducksparameter{helmet}}       \v!yes\settrue\setfalse\c_ducks_helmet
    \doifelse{\ducksparameter{milkshake}}    \v!yes\settrue\setfalse\c_ducks_milkshake
    \doifelse{\ducksparameter{wine}}         \v!yes\settrue\setfalse\c_ducks_wine
    \doifelse{\ducksparameter{prison}}       \v!yes\settrue\setfalse\c_ducks_prison
    \doifelse{\ducksparameter{basket}}       \v!yes\settrue\setfalse\c_ducks_basket

    \doifelse{\ducksparameter{easter}}\v!yes {
        \settrue\c_ducks_easter
        \settrue\c_ducks_basket
    } {
        \setfalse\c_ducks_easter
    }

    \doifelse{\ducksparameter{handbag}} \v!yes\settrue\setfalse\c_ducks_handbag
    \doifelse{\ducksparameter{cocktail}}\v!yes\settrue\setfalse\c_ducks_cocktail

    \doifelse{\ducksparameter{snowduck}}\v!yes {
        \settrue\c_ducks_snowduck
        \settrue\c_ducks_buttons
        \settrue\c_ducks_tophat
    } {
        \setfalse\c_ducks_snowducks
    }

    \doifelse{\ducksparameter{vampire}}       \v!yes\settrue\setfalse\c_ducks_vampire
    \doifelse{\ducksparameter{horsetail}}     \v!yes\settrue\setfalse\c_ducks_horsetail
    \doifelse{\ducksparameter{crozier}}       \v!yes\settrue\setfalse\c_ducks_crozier
    \doifelse{\ducksparameter{stethoscope}}   \v!yes\settrue\setfalse\c_ducks_stethoscope
    \doifelse{\ducksparameter{crystalball}}   \v!yes\settrue\setfalse\c_ducks_crystalball
    \doifelse{\ducksparameter{cheese}}        \v!yes\settrue\setfalse\c_ducks_cheese
    \doifelse{\ducksparameter{shovel}}        \v!yes\settrue\setfalse\c_ducks_shovel
    \doifelse{\ducksparameter{pickaxe}}       \v!yes\settrue\setfalse\c_ducks_pickaxe
    \doifelse{\ducksparameter{umbrella}}      \v!yes\settrue\setfalse\c_ducks_umbrella
    \doifelse{\ducksparameter{umbrellaclosed}}\v!yes\settrue\setfalse\c_ducks_umbrellaclosed

    \doifelse{\ducksparameter{overleaf}}\v!yes {
        \settrue\c_ducks_overleaf
        \settrue\c_ducks_graduate
        \settrue\c_ducks_squareglasses
    } {
        \setfalse\c_ducks_overleaf
    }

    \doifelse{\ducksparameter{davidlikespineapplepizza}}\v!yes {
        \settrue\c_ducks_pizza
        \settrue\c_ducks_speech
        \setducksparameter{speechtext}{\scale[factor=3]{\tfxx Ih, che schifo!}}
    } {}
    \doifelse{\ducksparameter{mug}}     \v!yes\settrue\setfalse\c_ducks_mug
    \doifelse{\ducksparameter{shield}}  \v!yes\settrue\setfalse\c_ducks_shield
    \doifelse{\ducksparameter{chullo}}  \v!yes\settrue\setfalse\c_ducks_chullo
    \doifelse{\ducksparameter{lei}}     \v!yes\settrue\setfalse\c_ducks_lei
    \doifelse{\ducksparameter{caruncle}}\v!yes\settrue\setfalse\c_ducks_caruncle
    \doifelse{\ducksparameter{blush}}   \v!yes\settrue\setfalse\c_ducks_blush
    \defineintermediatecolor[ducks:inear]     [.50,xcolorwhite,\ducksparameter{color}]
\stopsetups

\appendtoks
    \directsetup{ducks:initialize}%
\to\everysetupducks

%D In order to make things simpler and partly recommended by Wolfgang, 
%D I've decided to break all duck code into reusable pieces accessible
%D from other MP environments. I'm working on a maze module and some
%D preset pictures for starting and stopping points come in handy.

\startMPinitializations

% Body parts
picture ducks.body;
ducks.body :=
    image(
    fill
    (
    (0.513,1.145) .. controls (0.267, 1.102) and (-0.125,0.657) ..
    (0.289,0.261) .. controls (0.704,-0.135) and ( 2.863,0.130) ..
    (1.818,1.419) .. controls (0.938, 0.946) and ( 1.240,1.379) ..
    (0.513,1.145) -- cycle
    )
    );

picture ducks.head;
ducks.head :=
    image(
    fill (fullcircle xscaled 1 yscaled 1.25 shifted (0.90,1.50));
    );

picture ducks.eye;
ducks.eye :=
    image(
    fill (fullcircle xscaled 0.1786 yscaled 0.2500 shifted (0.23,1.7675) rotated -20);
    fill (fullcircle xscaled 0.1572 yscaled 0.2286 shifted (-0.06,1.74) rotated -20);
    );

picture ducks.pupil;
ducks.pupil := 
    image(
    fill (fullcircle xscaled 0.0714 yscaled 0.1428 shifted (0.26,1.7575) rotated -20);
    fill (fullcircle xscaled 0.0572 yscaled 0.1286 shifted (-0.03,1.73) rotated -20);
    );

picture ducks.caruncle[];
ducks.caruncle[1] :=
    image(
    fill (fullcircle xscaled .53 yscaled .20  rotated -16 shifted (0.65,1.45));
    fill (fullcircle xscaled 0.2636 yscaled 0.3350 shifted (0.23,1.7675) rotated -20);
    fill (fullcircle xscaled 0.2422 yscaled 0.3136 shifted (-0.06,1.74) rotated -20);
    );

picture ducks.grumpy;
ducks.grumpy :=
    image(
    fill ((0.406,1.472) .. controls (0.643,1.530) and (0.643,1.530) ..
    (0.800,1.300) .. controls (0.083,0.850) and (0.269,1.369) ..
    (0.406,1.472) -- cycle);
    );

picture ducks.laughing[];
ducks.laughing[1] := 
    image(
    fill ((0.40,1.20)
    .. controls (0.54,1.36) and (0.65,1.31) .. (0.91,1.37)
    .. controls (0.45,1.06) and (0.36,1.18) .. (0.40,1.20) -- cycle);
    );

ducks.laughing[2] := 
    image(
    fill ((0.41,1.47)
    .. controls (0.64,1.53) and (0.54,1.30) ..
    (0.91,1.37)
    .. controls (-0.02,1.10) and (0.28,1.37)
    .. (0.41,1.47) -- cycle);
    );

picture ducks.parrot;
ducks.parrot :=
    image(
    fill (0.40,1.45)
    .. controls (0.51,1.48) and (0.54,1.44) .. (0.59,1.39)
    .. controls (0.63,1.34) and (0.69,1.34) .. (0.86,1.35)
    .. controls (0.43,1.15) and (0.37,1.13) .. (0.34,1.20)
    .. controls (0.52,1.27) and (0.34,1.40) .. (0.40,1.45) -- cycle;
    fill (0.39,1.49)
    .. controls (0.50,1.52) and (0.54,1.44) .. (0.59,1.39)
    .. controls (0.63,1.34) and (0.68,1.34) .. (0.86,1.35)
    .. controls (0.43,1.15) and (0.54,1.40) .. (0.22,1.20)
    .. controls (0.24,1.52) and (0.39,1.49) .. (0.39,1.49) -- cycle;
    );

picture ducks.bill;
ducks.bill := 
    image(
    fill ((0.406,1.472)
    .. controls (0.643,1.530) and (0.541,1.303) .. (0.910,1.370)
    .. controls (0.083,0.850) and (0.269,1.369) .. (0.406,1.472)
    -- cycle);
    );

ducks.caruncle[2] :=
    image(
    fill (fullcircle scaled 0.08 shifted (0.455,1.5));
    fill (fullcircle scaled 0.13 shifted (0.60,1.44));
    fill (fullcircle scaled 0.10 shifted (0.845,1.36));
    );

%Hairstyle
picture ducks.shorthair;
ducks.shorthair := 
    image(
    fill(
    (1.3947,1.4175) .. controls (1.4546,1.4518) and (1.4699,1.6566) ..
    (1.4343,1.7992) .. controls (1.2528,2.5033) and (0.2339,2.2710) ..
    (0.4151,1.5907) .. controls (0.4345,1.8709) and (0.7421,2.0999) ..
    (0.9494,1.9054) .. controls (1.2241,1.6476) and (1.3316,1.3814) ..
    (1.3947,1.4175) -- cycle);
    );

picture ducks.longhair;
ducks.longhair := 
    image(
    fill(
    (1.4508,0.7565) .. controls (1.5146,0.7888) and (1.5854,0.8216) ..
    (1.6247,0.8831) .. controls (1.5859,0.8847) and (1.4726,0.9457) ..
    (1.5587,0.9706) .. controls (1.6317,0.9685) and (1.7016,1.0046) ..
    (1.7314,1.0734) .. controls (1.7931,1.1660) and (1.6616,1.1176) ..
    (1.6277,1.1566) .. controls (1.6853,1.1741) and (1.7840,1.1829) ..
    (1.8123,1.2244) .. controls (1.7022,1.2488) and (1.5688,1.2663) ..
    (1.5063,1.3739) .. controls (1.4619,1.5143) and (1.4696,1.6649) ..
    (1.4340,1.8076) .. controls (1.2524,2.5117) and (0.2335,2.2794) ..
    (0.4060,1.5991) .. controls (0.4341,1.8793) and (0.6629,2.1130) ..
    (0.9011,1.9578) .. controls (1.2427,1.7382) and (1.3350,1.4214) ..
    (1.0905,1.0610) .. controls (1.0597,1.0109) and (1.1103,0.9166) ..
    (1.1805,0.8670) .. controls (1.2507,0.8174) and (1.3503,0.7853) ..
    (1.4508,0.7565) -- cycle)
    );

picture ducks.crazyhair;
ducks.crazyhair := 
    image(
    fill(
    (0.1977,1.9023) .. controls (0.2633,2.0599) and (0.4819,2.0547) ..
    (0.4713,2.0879) .. controls (0.4647,2.2106) and (0.2516,2.2392) ..
    (0.2516,2.2392) .. controls (0.4352,2.2933) and (0.7427,1.9304) ..
    (0.5743,2.3885) .. controls (0.6017,2.3633) and (0.8307,2.1739) ..
    (0.8082,2.4245) .. controls (0.8271,2.2885) and (0.9195,2.2400) ..
    (0.9933,2.2673) .. controls (1.0814,2.6593) and (0.9688,2.0034) ..
    (1.3350,2.3615) .. controls (1.3657,2.3292) and (1.1627,2.1043) ..
    (1.3424,2.1387) .. controls (1.3102,1.8312) and (1.5049,2.2623) ..
    (1.5049,2.2623) .. controls (1.5049,2.2623) and (1.4675,2.0493) ..
    (1.4287,1.9560) .. controls (1.4287,1.9560) and (1.6830,1.9470) ..
    (1.7178,1.8823) .. controls (1.1926,1.8054) and (2.0160,1.7277) ..
    (1.4923,1.7275) .. controls (1.5366,1.6685) and (1.3013,1.6009) ..
    (1.6500,1.5946) .. controls (0.8836,1.5797) and (1.2764,1.9221) ..
    (0.8957,2.0442) .. controls (0.5516,2.0958) and (0.5228,1.8527) ..
    (0.4695,1.7963) .. controls (0.4825,1.9607) and (0.3601,1.9095) ..
    (0.1977,1.9023) -- cycle);
    );

picture ducks.recedinghair;
ducks.recedinghair :=
    image(
    fill(
    (1.3385,1.4841) .. controls (1.4243,1.4529) and (1.4877,1.7127) ..
    (1.3964,1.8658) .. controls (1.1071,2.3511) and (0.5189,2.1609) ..
    (0.4381,1.6816) .. controls (0.4575,1.9618) and (0.9007,2.2059) ..
    (1.1308,2.0390) .. controls (1.4703,1.7469) and (1.0343,1.5949) ..
    (1.3385,1.4841) -- cycle);
    );

picture ducks.mohican;
ducks.mohican := 
    image(
    fill(
    (0.7632,1.7935) .. controls (0.9223,2.3084) and (1.3870,1.8580) ..
    (1.3920,1.5854) .. controls (1.4233,2.1466) and (0.6812,2.5808) ..
    (0.6725,1.8166) .. controls (0.6725,1.8166) and (0.7615,1.7926) ..
    (0.7632,1.7935) -- cycle);
    );

picture ducks.mullet;
ducks.mullet := 
    image(
    fill(
    (1.3723,1.2684) .. controls (1.3723,1.2684) and (1.5129,1.5571) ..
    (1.4435,1.7815) .. controls (1.2652,2.3572) and (0.3342,2.2633) ..
    (0.4106,1.5424) .. controls (0.4204,1.6825) and (0.5692,1.9195) ..
    (0.5692,1.9195) .. controls (0.5692,1.9195) and (0.8475,1.8402) ..
    (1.1031,1.7844) .. controls (1.0808,1.6260) and (1.1130,1.4754) ..
    (1.1130,1.4754) .. controls (1.1956,1.4198) and (1.3001,1.3369) ..
    (1.3723,1.2684) -- cycle);
    );

picture ducks.parting;
ducks.parting := 
    image(
    fill ((1.4053,1.5403)
    .. controls (1.5524,2.2939) and (0.3739,2.5180) .. (0.4084,1.6117)
    .. controls (0.4248,1.8921) and (0.7860,1.9734) .. (0.7860,1.9734)
    .. controls (1.1125,1.5754) and (1.3375,1.4715) .. (1.4053,1.5403)
    -- cycle);
    );

picture ducks.eyebrow;
ducks.eyebrow := 
    image(
    numeric ducks_corner; ducks_corner = 0.05;
    fill unitsquare xscaled 0.06 yscaled -0.22 shifted (1.92,0.21) rotated 60 cornered ducks_corner;
    fill unitsquare xscaled 0.06 yscaled -0.28 shifted (1.67,-0.77) rotated 100 cornered ducks_corner;
    );

picture ducks.beard;
ducks.beard := 
    image(
    fill fullcircle scaled 0.24 shifted (1.300,1.30);
    fill fullcircle scaled 0.24 shifted (1.200,1.15);
    fill fullcircle scaled 0.24 shifted (0.500,1.05);
    fill fullcircle scaled 0.24 shifted (0.525,0.90);
    fill fullcircle scaled 0.24 shifted (0.525,0.75);
    fill fullcircle scaled 0.28 shifted (0.650,0.65);
    fill fullcircle scaled 0.24 shifted (0.750,0.75);
    fill fullcircle scaled 0.24 shifted (0.850,0.85);
    fill fullcircle scaled 0.24 shifted (0.950,0.95);
    fill fullcircle scaled 0.24 shifted (1.050,1.05);
    fill fullcircle scaled 0.24 shifted (1.150,1.25);
    fill fullcircle scaled 0.24 shifted (1.000,1.20);
    fill fullcircle scaled 0.24 shifted (0.850,1.20);
    fill fullcircle scaled 0.24 shifted (0.750,1.15);
    fill fullcircle scaled 0.24 shifted (0.650,1.10);
    fill fullcircle scaled 0.24 shifted (0.580,1.07);
    fill fullcircle scaled 0.12 shifted (0.440,1.46);
    fill fullcircle scaled 0.12 shifted (0.520,1.45);
    fill fullcircle scaled 0.12 shifted (0.600,1.41);
    fill fullcircle scaled 0.12 shifted (0.680,1.36);
    fill fullcircle scaled 0.12 shifted (0.760,1.34);
    fill fullcircle scaled 0.24 shifted (0.860,1.26);
    fill fullcircle scaled 0.06 shifted (0.380,1.44);
    fill fullcircle scaled 0.24 shifted (1.000,1.28);
    fill ((1.3,1.3) -- (0.5,1.05) -- (0.65,0.65) -- cycle);
    );
%Clothing

picture ducks.tshirt;
ducks.tshirt := 
    image(
    fill ((0.490,1.145)
    .. controls (0.267, 1.102) and (-0.125,0.657) .. (0.289,0.261)
    .. controls (0.704,-0.135) and ( 2.863,0.130) .. (1.818,1.419)
    .. controls (0.938, 0.976) and ( 1.240,1.279) .. (0.590,1.000)
    -- cycle);
    );

picture ducks.jacket;
ducks.jacket := 
    image(
    fill
    (
    (0.490,1.145) .. controls (0.267, 1.102) and (-0.125,0.657) ..
    (0.289,0.261) .. controls (0.704,-0.135) and ( 2.863,0.130) ..
    (1.818,1.419) .. controls (0.880, 0.946) and ( 1.240,1.378) ..
    (0.513,0.700) -- cycle
    );
    );

picture ducks.cape;
ducks.cape := 
    image(
    fill(
    (0.225,0.966) .. controls (1.314,0.961) and (2.070,0.650) ..
    (2.042,1.245) .. controls (1.863,1.164) and (1.844,1.173) ..
    (1.792,1.340) .. controls (1.635,1.235) and (1.620,1.268) ..
    (1.567,1.393) .. controls (1.358,1.086) and (0.664,1.096) ..
    (0.460,1.110) .. controls (0.461,1.133) and (0.305,1.077) ..
    (0.235,0.966) -- cycle);
    );

picture ducks.aodai;
ducks.aodai := 
    image(
    fill ((1.819,1.419)
    .. controls (2.871,0.120) and (0.711,-0.145) .. (0.296,0.251)
    .. controls (-0.118,0.647) and (0.232,1.073) .. (0.440,1.128)
    -- (0.567,0.927)
    .. controls (0.567,0.927) and (0.543,0.906) .. (0.509,0.882)
    -- (0.481,0.929) -- (0.458,0.915) -- (0.487,0.868)
    .. controls (0.473,0.859) and (0.457,0.850) .. (0.441,0.842)
    -- (0.422,0.894) -- (0.397,0.885) -- (0.417,0.831)
    .. controls (0.404,0.826) and (0.391,0.821) .. (0.378,0.818)
    -- (0.364,0.869) -- (0.338,0.862) -- (0.351,0.815)
    .. controls (0.334,0.814) and (0.318,0.817) .. (0.304,0.825)
    .. controls (0.303,0.774) and (0.329,0.759) .. (0.365,0.763)
    -- (0.376,0.722) -- (0.402,0.729) -- (0.391,0.768)
    .. controls (0.405,0.772) and (0.420,0.778) .. (0.435,0.784)
    -- (0.447,0.750) -- (0.472,0.759) -- (0.459,0.796)
    .. controls (0.477,0.805) and (0.496,0.815) .. (0.512,0.825)
    -- (0.533,0.791) -- (0.556,0.805) -- (0.535,0.840)
    .. controls (0.567,0.860) and (0.590,0.877) .. (0.590,0.877)
    .. controls (1.011,1.168) and (0.887,0.936) .. (1.819,1.419) -- cycle);
    );

%Accessories
picture ducks.water;
ducks.water := 
    image(
    nofill (fullcircle xscaled 1.76 yscaled 0.70 shifted (1.00,0.40));
    nofill (fullcircle xscaled 1.50 yscaled 0.50 shifted (1.00,0.40));
    nofill (fullcircle xscaled 2.10 yscaled 1.00 shifted (1.00,0.40));
    nofill (fullcircle xscaled 1.90 yscaled 0.84 shifted (1.00,0.40));
    nofill (fullcircle xscaled 2.46 yscaled 1.26 shifted (1.00,0.40));
    nofill (fullcircle xscaled 2.34 yscaled 1.14 shifted (1.00,0.40));
    nofill (fullcircle xscaled 2.84 yscaled 1.54 shifted (1.00,0.40));
    eofill (fullcircle xscaled 2.76 yscaled 1.46 shifted (1.00,0.40))
    );

picture ducks.sheep[];
ducks.sheep[1] := 
    image(
    fill fullcircle scaled 0.3 shifted (0.65,1.95) ;
    fill fullcircle scaled 0.3 shifted (0.50,1.75) ;
    fill fullcircle scaled 0.3 shifted (0.46,1.51) ;
    fill fullcircle scaled 0.3 shifted (0.37,1.00) ;
    fill fullcircle scaled 0.3 shifted (0.23,0.80) ;
    fill fullcircle scaled 0.3 shifted (0.20,0.60) ;
    fill fullcircle scaled 0.3 shifted (0.25,0.45) ;
    fill fullcircle scaled 0.3 shifted (0.35,0.30) ;
    fill fullcircle scaled 0.3 shifted (0.55,0.25) ;
    fill fullcircle scaled 0.3 shifted (0.75,0.20) ;
    fill fullcircle scaled 0.3 shifted (0.95,0.16) ;
    fill fullcircle scaled 0.3 shifted (1.15,0.20) ;
    fill fullcircle scaled 0.3 shifted (1.35,0.23) ;
    fill fullcircle scaled 0.3 shifted (1.55,0.30) ;
    fill fullcircle scaled 0.3 shifted (1.75,0.38) ;
    fill fullcircle scaled 0.3 shifted (1.95,0.50) ;
    fill fullcircle scaled 0.3 shifted (2.05,0.65) ;
    fill fullcircle scaled 0.3 shifted (2.10,0.85) ;
    fill fullcircle scaled 0.3 shifted (2.05,1.00) ;
    fill fullcircle scaled 0.3 shifted (2.00,1.15) ;
    fill fullcircle scaled 0.3 shifted (1.85,1.35) ;
    fill fullcircle scaled 0.3 shifted (1.60,1.25) ;
    fill fullcircle scaled 0.3 shifted (1.35,1.25) ;
    fill fullcircle scaled 0.3 shifted (1.30,1.50) ;
    fill fullcircle scaled 0.3 shifted (1.30,1.70) ;
    fill fullcircle scaled 0.3 shifted (1.20,1.90) ;
    fill fullcircle scaled 0.3 shifted (0.85,2.05) ;
    fill fullcircle scaled 0.3 shifted (1.05,2.00) ;
    );

ducks.sheep[2] := 
    image(
    fill fullcircle xscaled 0.6 yscaled 0.8 shifted (0.8,1.5);
    clip currentpicture to (fullcircle xscaled 0.6 yscaled 0.8 shifted (1.2,1.7) rotated -5);
    );

picture ducks.devil[];
ducks.devil[1] := 
    image(
    fill ((0.7723,2.3756)
    .. controls (0.6369,2.1184) and (0.7916,2.0228) .. (0.8360,1.9897)
    .. controls (0.8744,1.9675) and (0.8774,1.9511) .. (0.8853,1.9173)
    .. controls (0.8853,1.8595) and (0.8407,1.8127) .. (0.7856,1.8127)
    .. controls (0.7535,1.8178) and (0.7240,1.8231) .. (0.6965,1.8545)
    .. controls (0.6965,1.8545) and (0.4451,2.2259) .. (0.7723,2.3756) -- cycle);
    );

ducks.devil[2] := 
    image(
    fill
    ((1.2185,2.3521)
    .. controls (1.3540,2.0950) and (1.1993,1.9994) .. (1.1548,1.9663)
    .. controls (1.1165,1.9441) and (1.1134,1.9277) .. (1.1056,1.8938)
    .. controls (1.1056,1.8361) and (1.1502,1.7893) .. (1.2052,1.7893)
    .. controls (1.2373,1.7944) and (1.2669,1.7996) .. (1.2944,1.8311)
    .. controls (1.2944,1.8311) and (1.5458,2.2025) .. (1.2185,2.3521) -- cycle);
    );

picture ducks.conicalhat[];
ducks.conicalhat[1] :=
    image(
    fill fullcircle xscaled 1.58 yscaled 0.2 shifted (0.265,1.915) rotated -21;
    );

ducks.conicalhat[2] :=
    image(
    fill ((0.5501,0.9739) -- (0.2002,1.9676) -- (0.2946,2.0008) -- (0.6445,1.0072) -- cycle);
    );

ducks.conicalhat[3] :=
    image(
    fill ((1.5943,1.5059) 
    .. controls (1.4384,1.3576) and (1.2780,1.2120) .. (1.0987,1.0923) 
    -- (1.0617,0.9549) 
    .. controls (1.2151,1.0361) and (1.3476,1.1504) .. (1.4785,1.2630) 
    .. controls (1.5417,1.3187) and (1.6038,1.3757) .. (1.6644,1.4344) -- cycle);
    );

ducks.conicalhat[4] :=
    image(
    fill ((1.5943,1.5059)
    .. controls (1.4384,1.3576) and (1.2780,1.2120) .. (1.0987,1.0923)
    .. controls (0.9540,0.9995) and (0.7864,0.9875) .. (0.6358,1.0398)
    .. controls (0.6727,0.9043) and (0.9752,0.9113) .. (1.0617,0.9549)
    .. controls (1.2151,1.0361) and (1.3476,1.1504) .. (1.4785,1.2630)
    .. controls (1.5417,1.3187) and (1.6038,1.3757) .. (1.6644,1.4344)
    -- cycle);
    );

ducks.conicalhat[5] := 
    image(
    fill ((1.6722,1.4137)
    .. controls (1.6722,1.4337) and (1.3592,1.6230) .. (0.9513,1.7735)
    .. controls (0.5433,1.9239) and (0.1948,1.9784) .. (0.1948,1.9754)
    .. controls (0.2049,2.0230) and (1.1428,2.36) .. (1.1428,2.3)
    .. controls (1.1428,2.35) and (1.6821,1.4784) .. (1.6722,1.4137) -- cycle);
    );

picture ducks.mask;
ducks.mask := 
    image(
    fill (unitsquare xscaled 1.4 yscaled 0.29 shifted (-0.1,1.59) rotated -15);
    clip currentpicture to (fullcircle xscaled 1 yscaled 1.25 shifted (0.90,1.50));
    );

picture ducks.lapel;
ducks.lapel := 
    image(
    fill ((0.490,1.145)
    .. controls (0.3984,1.13) and (0.3515,1.08) .. (0.3515,1.08)
    -- (0.4265,1.0192) -- (0.35,0.98) -- (0.513,0.700)
    -- (1.0089,0.9162) -- (0.9547,0.9868) -- (1.1194,0.9782) -- (1.0822,1.135)
    .. controls (0.9616,1.1) and (0.8648,1.0300) .. (0.513,0.700) -- cycle);
    );

picture ducks.tie;
ducks.tie := 
    image(
    fill (unitsquare xscaled 0.11 yscaled 0.45 shifted (0.32,0.7) rotated -12);
    );

picture ducks.bowtie;
ducks.bowtie := 
    image(
    fill ((0.4382, 1.1105)
    .. controls (0.3984, 1.0671) and (0.3911, 0.9535) .. (0.4116, 0.9176)
    .. controls (0.4958, 0.9064) and (0.565, 0.9487) .. (0.565, 0.9487)
    -- (0.6448, 0.9398)
    .. controls (0.6448, 0.9398) and (0.6777, 0.8844) .. (0.804, 0.8689)
    .. controls (0.8323, 0.9056) and (0.8422, 1.0026) .. (0.8284, 1.0551)
    .. controls (0.7881, 1.0942) and (0.6537, 1.0285) .. (0.6537, 1.0285)
    -- (0.5739, 1.0374)
    .. controls (0.5739, 1.0374) and (0.5436, 1.0956) .. (0.4382, 1.1105)
    -- cycle);
    );

picture ducks.necklace;
ducks.necklace := 
    image(
    fill fullcircle scaled 0.064 shifted (0.5000,1.112);
    fill fullcircle scaled 0.064 shifted (0.5100,1.050);
    fill fullcircle scaled 0.064 shifted (0.5200,0.990);
    fill fullcircle scaled 0.064 shifted (0.5400,0.931);
    fill fullcircle scaled 0.064 shifted (0.5825,0.885);
    fill fullcircle scaled 0.064 shifted (0.6450,0.885);
    fill fullcircle scaled 0.064 shifted (0.7000,0.910);
    fill fullcircle scaled 0.064 shifted (0.7500,0.945);
    fill fullcircle scaled 0.064 shifted (0.8000,0.980);
    fill fullcircle scaled 0.064 shifted (0.8500,1.020);
    fill fullcircle scaled 0.064 shifted (0.9000,1.050);
    fill fullcircle scaled 0.064 shifted (0.9500,1.080);
    fill fullcircle scaled 0.064 shifted (1.0000,1.110);
    fill fullcircle scaled 0.064 shifted (1.0550,1.130);
    fill fullcircle scaled 0.064 shifted (1.1100,1.150);
    fill fullcircle scaled 0.064 shifted (1.1650,1.165);
    fill fullcircle scaled 0.064 shifted (1.2200,1.180);
    fill fullcircle scaled 0.064 shifted (1.2750,1.195);
    fill fullcircle scaled 0.064 shifted (1.3300,1.210);
    );

%For Frida with love <3
picture ducks.lei;
ducks.lei := 
    image(
    path tmp;
    tmp :=
    for i = 0 upto 4:
        (.25 dir 72i) .. (.30 dir (72i+36)) ..
    endfor
    cycle;
    for i = 1 upto 20:
        fill tmp 
        rotated uniformdeviate(36)
        shifted (dir (180+9i) yscaled 0.6 slanted 0.7) 
        withcolor hsvtorgb(36i mod 360,0.8,0.9);
    endfor;
    currentpicture := currentpicture scaled 0.37 shifted (.92,1.1);
    );

picture ducks.neckerchief[];
ducks.neckerchief[1] := 
    image(
    fill ((0.3650,1.0892)
    .. controls (0.4127,1.1589) and (0.4900,1.1450) .. (0.4900,1.1450)
    .. controls (0.6500,0.9300) and (1.1366,1.2400) .. (1.3675,1.2649)
    .. controls (1.4131,1.2533) and (1.4052,1.2446) .. (1.4099,1.2124)
    .. controls (1.3028,1.0810) and (0.7415,0.8930) .. (0.6807,0.9076)
    .. controls (0.8257,0.7387) and (0.6347,0.7168) .. (0.7151,0.4426)
    .. controls (0.6059,0.5672) and (0.5513,0.6588) .. (0.5938,0.8388)
    .. controls (0.5871,0.6953) and (0.4493,0.7565) .. (0.4716,0.4967)
    .. controls (0.3682,0.6697) and (0.3820,0.7984) .. (0.5321,0.9351)
    .. controls (0.4635,0.9699) and (0.4115,1.0215) .. (0.3650,1.0892)
    -- cycle);
    );

ducks.neckerchief[2] := 
    image(
    numeric ducks_corner;
    ducks_corner = 0.05;
    fill (unitsquare xscaled 0.22 yscaled -0.07 shifted (0.33,1.05) rotated -10 
    cornered ducks_corner);
    );

picture ducks.buttons[];
ducks.buttons[1] := 
    image(
    fill fullcircle scaled 0.1 shifted (0.49,0.60);
    fill fullcircle scaled 0.1 shifted (0.46,0.45);
    fill fullcircle scaled 0.1 shifted (0.45,0.30);
    );

ducks.buttons[2] := 
    image(
    fill fullcircle scaled 0.1 shifted (0.53,0.75);
    fill fullcircle scaled 0.1 shifted (0.50,0.60);
    fill fullcircle scaled 0.1 shifted (0.47,0.45);
    );

picture ducks.alien; 
ducks.alien :=
    image(
    fill unitsquare xscaled 0.07 yscaled 0.50 shifted (0.09,2.10) rotated -25;
    fill unitsquare xscaled 0.07 yscaled 0.39 shifted (0.79,1.86) rotated 5;
    fill fullcircle scaled 0.14 shifted (1.20,2.30);
    fill fullcircle scaled 0.14 shifted (0.62,2.35);
    );

picture ducks.hat[];
ducks.hat[1] := 
    image(
    fill fullcircle xscaled 1.40 yscaled 0.20 shifted (0.44,2.1) rotated -15;
    fill unitsquare xscaled 0.88 yscaled 0.30 shifted (0.00,2.1) rotated -15;
    fill fullcircle xscaled 0.88 yscaled 0.16 shifted (0.44,2.4) rotated -15;
    );

ducks.hat[2] := 
    image(
    fill fullcircle xscaled 1.20 yscaled 0.20 shifted (0.44,2.1) rotated -15;
    fill unitsquare xscaled 0.74 yscaled 0.30 shifted (0.07,2.1) rotated -15;
    fill fullcircle xscaled 0.74 yscaled 0.16 shifted (0.44,2.4) rotated -15;
    );

picture ducks.cap;
ducks.cap := 
    image(
    fill ((subpath (0,150/45) of fullcircle) -- cycle) shifted (0.9,1.75);
    fill fullcircle xscaled 1.2 yscaled 0.3 shifted (0.3,2.05) rotated -15;
    );

picture ducks.santa[];
ducks.santa[1] := 
    image(
    fill ((0.430,1.803)
    .. controls (0.590,2.174) and (0.837,2.065) .. (1.118,1.954)
    .. controls (1.679,1.731) and (1.328,1.193) .. (1.647,1.057)
    .. controls (1.638,1.255) and (1.745,2.104) .. (1.168,2.270)
    .. controls (0.867,2.356) and (0.536,2.280) .. (0.430,1.803)
    -- cycle);
    );

ducks.santa[2] := 
    image(
    fill ((0.44,1.733)
    .. controls (0.211,2.299) and (1.082,2.188) .. (1.456,1.759)
    .. controls (1.534,1.637) and (1.480,1.545) .. (1.400,1.566)
    .. controls (1.265,1.714) and (0.577,2.267) .. (0.44,1.733)
    -- cycle) withcolor (0.95,0.90,0.85);
    );

ducks.santa[3] := 
    image(
    fill fullcircle scaled 0.34 shifted (1.6,1.0)  withcolor (0.95,0.90,0.85);
    );

picture ducks.chef;
ducks.chef :=
    image(
    fill fullcircle xscaled 0.74 yscaled 0.16 shifted (0.44,2.1) rotated -15;
    fill unitsquare xscaled 0.74 yscaled 0.45 shifted (0.07,2.1) rotated -15;
    fill fullcircle scaled 0.34 shifted (1.01,2.47);
    fill fullcircle scaled 0.30 shifted (1.24,2.35);
    fill fullcircle scaled 0.24 shifted (0.77,2.40);
    fill fullcircle scaled 0.24 shifted (1.39,2.20);
    );

picture ducks.graduate[];
ducks.graduate[1] := 
    image(
    fill (fullcircle xscaled 0.74 yscaled 0.2 shifted (0.44,2.1) rotated -15);
    fill (unitsquare xscaled 0.74 yscaled 0.2 shifted (0.07,2.1) rotated -15);
    fill ((0.3,2.25) -- (1.05,2.35) -- (1.7,1.95) -- (0.92,1.85) -- cycle);
    );

ducks.graduate[2] := 
    image(
    numeric ducks_corner;
    ducks_corner = 0.05;
    fill ((1.12,1.89) -- (1.01,2.1) -- (1.09,2.11) -- (1.2,1.9) -- (1.2,1.3) -- (1.12,1.3) -- cycle)
    cornered ducks_corner;
    fill fullcircle xscaled 0.12 yscaled 0.24 shifted (1.16,1.3);
    );

picture ducks.beret;
ducks.beret := 
    image(
    fill fullcircle xscaled 1.0 yscaled 0.34 shifted (0.13,2.15) rotated -25;
    fill fullcircle xscaled 1.1 yscaled 0.34 shifted (0.13,2.25) rotated -25;
    fill fullcircle scaled 0.16 shifted (0.13,2.4) rotated -25;
    );

picture ducks.unicorn[];
ducks.unicorn[1] := 
    image(
    fill (((1.48,1.4375) -- (1.60,1.9) -- (1.72,1.4375) -- cycle) rotated 25);
    );
    
ducks.unicorn[2] := 
    image(
    fill (((1.50,1.43) -- (1.60,1.8375) -- (1.70,1.43) -- cycle) rotated 25);
    );

picture ducks.witch;
ducks.witch := 
    image(
    fill fullcircle xscaled 1.5 yscaled 0.34 shifted (0.44,2.13) rotated -15 ;
    fill (0.05,2.2)--(0.45,3.2)--(0.82,2.2)--cycle rotated -15;
    );

picture ducks.crown;
ducks.crown := 
    image(
    fill(
    (0.7365,2.0616) .. controls (0.7365,2.0616) and (0.7771,2.1763) ..
    (0.6959,2.4650) -- (0.8895,2.2378) -- (1.0391,2.3943) --
    (1.1260,2.1961) --
    (1.3938,2.3318) .. controls (1.1927,2.1132) and (1.2194,1.9764) ..
    (1.2194,1.9764) .. controls (1.0774,1.9202) and (0.8507,1.9601) ..
    (0.7365,2.0616) -- cycle);
    );

picture ducks.queencrown;
ducks.queencrown := 
    image(
    fill(
    (0.7370,2.0732) .. controls (0.6966,2.2091) and (0.6769,2.3503) ..
    (0.6354,2.4859) .. controls (0.6149,2.5164) and (0.5958,2.5732) ..
    (0.6498,2.5808) .. controls (0.6973,2.5907) and (0.7091,2.5350) ..
    (0.6926,2.5016) .. controls (0.6967,2.4544) and (0.7188,2.4109) ..
    (0.7340,2.3665) .. controls (0.7415,2.3472) and (0.7619,2.2862) ..
    (0.7676,2.3381) .. controls (0.7755,2.3852) and (0.7871,2.4329) ..
    (0.7833,2.4808) .. controls (0.7597,2.5148) and (0.7834,2.5720) ..
    (0.8294,2.5570) .. controls (0.8775,2.5457) and (0.8536,2.4937) ..
    (0.8436,2.4638) .. controls (0.8502,2.3973) and (0.8640,2.3313) ..
    (0.8798,2.2664) .. controls (0.9047,2.2750) and (0.9168,2.3261) ..
    (0.9342,2.3514) .. controls (0.9492,2.3853) and (0.9714,2.4171) ..
    (0.9773,2.4540) .. controls (0.9645,2.4873) and (0.9766,2.5358) ..
    (1.0204,2.5303) .. controls (1.0646,2.5298) and (1.0691,2.4725) ..
    (1.0443,2.4460) .. controls (1.0440,2.3935) and (1.0580,2.3419) ..
    (1.0671,2.2905) .. controls (1.0706,2.2719) and (1.0788,2.2126) ..
    (1.0985,2.2554) .. controls (1.1269,2.3087) and (1.1558,2.3623) ..
    (1.1772,2.4187) .. controls (1.1697,2.4515) and (1.1716,2.5081) ..
    (1.2210,2.5018) .. controls (1.2706,2.4969) and (1.2686,2.4403) ..
    (1.2406,2.4126) .. controls (1.2279,2.3600) and (1.2211,2.3057) ..
    (1.2172,2.2518) .. controls (1.2296,2.2439) and (1.2538,2.2943) ..
    (1.2693,2.3112) .. controls (1.2908,2.3467) and (1.3228,2.3784) ..
    (1.3316,2.4200) .. controls (1.3203,2.4624) and (1.3708,2.5014) ..
    (1.4051,2.4678) .. controls (1.4448,2.4342) and (1.3945,2.3994) ..
    (1.3765,2.3710) .. controls (1.3022,2.2536) and (1.2440,2.1265) ..
    (1.1686,2.0097) .. controls (0.9649,1.9465) and (0.8367,1.9955) ..
    (0.7370,2.0732) -- cycle);
    );

picture ducks.kingcrown;
ducks.kingcrown := 
    image(
    fill(
    (0.6572,2.0396) .. controls (0.6637,2.0838) and (0.6716,2.1289) ..
    (0.6684,2.1735) .. controls (0.6481,2.2496) and (0.5923,2.3131) ..
    (0.5818,2.3921) .. controls (0.5738,2.4607) and (0.6167,2.5343) ..
    (0.6862,2.5502) .. controls (0.7548,2.5703) and (0.8210,2.5304) ..
    (0.8720,2.4881) .. controls (0.8984,2.4712) and (0.9239,2.4324) ..
    (0.9486,2.4249) .. controls (0.9524,2.4691) and (0.9566,2.5158) ..
    (0.9844,2.5527) .. controls (1.0052,2.5845) and (1.0390,2.6282) ..
    (1.0820,2.6127) .. controls (1.1212,2.5899) and (1.1378,2.5421) ..
    (1.1478,2.5003) .. controls (1.1576,2.4639) and (1.1336,2.4180) ..
    (1.1349,2.3906) .. controls (1.2050,2.4269) and (1.2847,2.4629) ..
    (1.3654,2.4429) .. controls (1.4292,2.4285) and (1.4864,2.3679) ..
    (1.4793,2.2998) .. controls (1.4859,2.2404) and (1.4407,2.1925) ..
    (1.4006,2.1551) .. controls (1.3681,2.1232) and (1.3290,2.0951) ..
    (1.3072,2.0544) .. controls (1.2904,2.0121) and (1.2805,1.9674) ..
    (1.2738,1.9225) .. controls (1.1221,1.8892) and (0.9586,1.8836) ..
    (0.8112,1.9386) .. controls (0.7535,1.9608) and (0.6999,1.9945) ..
    (0.6572,2.0396) -- cycle);
    );

picture ducks.bunny[];
ducks.bunny[1] :=
    image(
    fill (fullcircle xscaled 0.6 yscaled 0.8 shifted (1.06,2.2) rotated -5);
    fill (fullcircle xscaled 0.6 yscaled 0.8 shifted (0.28,2.26) rotated -5);
    clip currentpicture to (fullcircle xscaled 0.6 yscaled 0.8 shifted (0.68,2.38) rotated -5);
    );

ducks.bunny[2] := 
    image(
    fill (fullcircle xscaled 0.5 yscaled 0.7 shifted (1.06,2.2) rotated -5);
    fill (fullcircle xscaled 0.5 yscaled 0.7 shifted (0.28,2.26) rotated -5);
    clip currentpicture to (fullcircle xscaled 0.5 yscaled 0.7 shifted (0.68,2.38) rotated -5);
    );

picture ducks.peakedcap;
ducks.peakedcap := 
    image(
    fill fullcircle xscaled 1 yscaled 0.3 shifted (0.35,2.05) rotated -15;
    fill fullcircle xscaled 1 yscaled 0.34 shifted (0.13,2.15) rotated -25;
    fill fullcircle xscaled 1.1 yscaled 0.34 shifted (-0.25,2.2) rotated -35;
    );

picture ducks.tophat;
ducks.tophat := 
    image(
    fill fullcircle xscaled 0.96 yscaled 0.2 shifted (0.44,2.1) rotated -15;
    fill ((0.12,2.1) -- (0.75,2.1) -- (0.81,2.55) -- (0.07,2.55) -- cycle) rotated -15;
    fill fullcircle xscaled 0.74 yscaled 0.16 shifted (0.44,2.55) rotated -15;
    );

picture ducks.darthvader;
ducks.darthvader := 
    image(
    fill(
    (0.4264,1.9092) .. controls (0.4347,1.9248) and (0.4612,1.9186) ..
    (0.4969,1.9783) .. controls (0.5499,2.0670) and (0.7559,2.2377) ..
    (0.9889,2.2057) .. controls (1.2691,2.1668) and (1.4075,1.8829) ..
    (1.4176,1.7421) .. controls (1.4279,1.5955) and (1.5246,1.3484) ..
    (1.5246,1.3484) --
    (0.9846,1.2036) .. controls (1.0898,1.2735) and (1.0667,1.5598) ..
    (1.0555,1.6034) .. controls (0.9758,1.9147) and (0.8121,1.8681) ..
    (0.7174,1.7694) .. controls (0.5671,2.0370) and (0.4103,1.7556) ..
    (0.4132,1.472) --
    (0.3529,1.415) .. controls (0.3529,1.43938) and (0.3893,1.8379)..
    (0.4264,1.9092) -- cycle)
    );

picture ducks.harlequin[];
ducks.harlequin[1] := 
    image(
    fill ((0.6006,1.9719)
    .. controls (0.7432,1.8954) and (0.9320,1.8698) .. (0.9320,1.8698)
    -- (1.0404,2.3839)
    .. controls (0.9223,2.8873) and (0.1755,2.5634) .. (0.3019,2.2958)
    .. controls (0.5807,2.5024) and (0.7251,2.3376) .. (0.6006,1.9719)
    -- cycle);
    );

ducks.harlequin[2] :=
    image(
    fill ((1.2853,1.8902)
    .. controls (1.1177,1.8507) and (0.9278,1.8703) .. (0.9278,1.8703)
    -- (1.0404,2.3839)
    .. controls (1.3637,2.8347) and (1.9373,2.3532) .. (1.7049,2.1284)
    .. controls (1.5267,2.3895) and (1.3204,2.2666) .. (1.2853,1.8902)
    -- cycle);
    );

ducks.harlequin[3] :=
    image(
    fill fullcircle scaled 0.2 shifted (1.7,2.07);
    );

ducks.harlequin[4] := 
    image(
    fill fullcircle scaled 0.2 shifted (0.3,2.23);
    );

picture ducks.strawhat[];
ducks.strawhat[1] := 
    image(
    fill fullcircle xscaled 1.5 yscaled 0.2 shifted (0.44,2.0) rotated -15;
    fill unitsquare xscaled 0.68 yscaled 0.45 shifted (0.1,2.05) rotated -15;
    fill fullcircle xscaled 0.68 yscaled 0.16 shifted (0.44,2.5) rotated -15;
    fill (-0.3,2.02) -- (1.18,2.02) -- (0.78,2.2) -- (0.1,2.2) -- cycle rotated -15;
    );

ducks.strawhat[2] := 
    image(
    fill fullcircle xscaled 0.68 yscaled 0.16 shifted (0.44,2.2) rotated -15;
    fill unitsquare xscaled 0.68 yscaled 0.10 shifted (0.1,2.2) rotated -15;
    );

ducks.strawhat[3] := 
    image(
    fill fullcircle xscaled 0.68 yscaled 0.16 shifted (0.44,2.3) rotated -15;
    );

picture ducks.helmet[];
ducks.helmet[1] := 
    image(
    fill ((1.4331,1.5155)
    .. controls (1.4365,1.7226) and (1.3866,2.0493) .. (1.0429,2.1279)
    .. controls (0.7050,2.2052) and (0.4794,1.9294) .. (0.4481,1.8183)
    .. controls (0.6062,1.8381) and (1.1506,1.7480) .. (1.4331,1.5155)
    -- cycle);
    );

ducks.helmet[2] :=
    image(
    fill ((1.0282,2.1360)
    .. controls (0.9395,2.1312) and (0.8696,2.0652) .. (0.8152,2.0010)
    .. controls (0.7824,1.9609) and (0.7546,1.9169) .. (0.7309,1.8709)
    .. controls (0.6510,1.8859) and (0.5703,1.8971) .. (0.4892,1.9024)
    .. controls (0.4595,1.8831) and (0.4114,1.7962) .. (0.4743,1.7961)
    .. controls (0.5446,1.7868) and (0.6149,1.7767) .. (0.6845,1.7629)
    .. controls (0.6647,1.7052) and (0.6469,1.6454) .. (0.6401,1.5851)
    -- (0.6583,1.5355) -- (0.7069,1.5673)
    .. controls (0.7193,1.6285) and (0.7363,1.6889) .. (0.7590,1.7471)
    .. controls (0.9991,1.6922) and (1.2114,1.6182) .. (1.4111,1.4722)
    .. controls (1.4369,1.4960) and (1.4536,1.5229) .. (1.4475,1.5553)
    .. controls (1.4417,1.5927) and (1.4030,1.6066) .. (1.3766,1.6276)
    .. controls (1.2054,1.7408) and (1.0085,1.8089) .. (0.8095,1.8546)
    .. controls (0.8733,1.9674) and (0.9684,2.0703) .. (1.0932,2.1138)
    .. controls (1.0751,2.1288) and (1.0515,2.1362) .. (1.0282,2.1360)
    -- cycle);
    );

ducks.helmet[3] :=
    image(
    fill fullcircle scaled 0.03 shifted (0.502,1.845);
    fill fullcircle scaled 0.03 shifted (0.586,1.835);
    fill fullcircle scaled 0.03 shifted (0.684,1.822);
    fill fullcircle scaled 0.03 shifted (0.791,1.799);
    fill fullcircle scaled 0.03 shifted (0.899,1.770);
    fill fullcircle scaled 0.03 shifted (1.003,1.741);
    fill fullcircle scaled 0.03 shifted (1.099,1.706);
    fill fullcircle scaled 0.03 shifted (1.185,1.673);
    fill fullcircle scaled 0.03 shifted (1.276,1.629);
    fill fullcircle scaled 0.03 shifted (1.360,1.581);
    fill fullcircle scaled 0.03 shifted (0.676,1.606);
    fill fullcircle scaled 0.03 shifted (0.695,1.666);
    fill fullcircle scaled 0.03 shifted (0.714,1.729);
    fill fullcircle scaled 0.03 shifted (0.784,1.889);
    fill fullcircle scaled 0.03 shifted (0.835,1.968);
    fill fullcircle scaled 0.03 shifted (0.896,2.034);
    fill fullcircle scaled 0.03 shifted (0.957,2.081);
    fill fullcircle scaled 0.03 shifted (1.020,2.115);
    fill fullcircle scaled 0.03 shifted (1.422,1.535);
    fill fullcircle scaled 0.03 shifted (0.502,1.845);
    ); 

picture ducks.viking[];
ducks.viking[1] :=
    image(
    fill ((1.4331,1.5155)
    .. controls (1.4365,1.7226) and (1.3866,2.0493) .. (1.0429,2.1279)
    .. controls (0.7050,2.2052) and (0.4794,1.9294) .. (0.4481,1.8183)
    .. controls (0.6062,1.8381) and (1.1506,1.7480) .. (1.4331,1.5155)
    -- cycle)); 

ducks.viking[2] := 
    image(
    fill ((1.0282,2.1360)
    .. controls (0.9395,2.1312) and (0.8696,2.0652) .. (0.8152,2.0010)
    .. controls (0.7824,1.9609) and (0.7546,1.9169) .. (0.7309,1.8709)
    .. controls (0.6510,1.8859) and (0.5703,1.8971) .. (0.4892,1.9024)
    .. controls (0.4595,1.8831) and (0.4114,1.7962) .. (0.4743,1.7961)
    .. controls (0.5446,1.7868) and (0.6149,1.7767) .. (0.6845,1.7629)
    .. controls (0.6845,1.7629) and (0.6845,1.7629) .. (0.7590,1.7471)
    .. controls (0.9991,1.6922) and (1.2114,1.6182) .. (1.4111,1.4722)
    .. controls (1.4369,1.4960) and (1.4536,1.5229) .. (1.4475,1.5553)
    .. controls (1.4417,1.5927) and (1.4030,1.6066) .. (1.3766,1.6276)
    .. controls (1.2054,1.7408) and (1.0085,1.8089) .. (0.8095,1.8546)
    .. controls (0.8733,1.9674) and (0.9684,2.0703) .. (1.0932,2.1138)
    .. controls (1.0751,2.1288) and (1.0515,2.1362) .. (1.0282,2.1360)
    -- cycle));

ducks.viking[3] :=
    image(
    fill fullcircle scaled 0.03 shifted (0.502,1.845);
    fill fullcircle scaled 0.03 shifted (0.586,1.835);
    fill fullcircle scaled 0.03 shifted (0.684,1.822);
    fill fullcircle scaled 0.03 shifted (0.791,1.799);
    fill fullcircle scaled 0.03 shifted (0.899,1.770);
    fill fullcircle scaled 0.03 shifted (1.003,1.741);
    fill fullcircle scaled 0.03 shifted (1.099,1.706);
    fill fullcircle scaled 0.03 shifted (1.185,1.673);
    fill fullcircle scaled 0.03 shifted (1.276,1.629);
    fill fullcircle scaled 0.03 shifted (1.360,1.581);
    fill fullcircle scaled 0.03 shifted (0.784,1.889);
    fill fullcircle scaled 0.03 shifted (0.835,1.968);
    fill fullcircle scaled 0.03 shifted (0.896,2.034);
    fill fullcircle scaled 0.03 shifted (0.957,2.081);
    fill fullcircle scaled 0.03 shifted (1.020,2.115);
    fill fullcircle scaled 0.03 shifted (1.422,1.535);
    );

picture ducks.sailor;
ducks.sailor := 
    image(
    fill
    ((1.0390,2.2743)
    .. controls (0.9475,2.2748) and (0.8569,2.2355) .. (0.7943,2.1690)
    .. controls (0.7147,2.1872) and (0.6335,2.2098) .. (0.5512,2.2029)
    .. controls (0.5524,2.1164) and (0.5536,2.0299) .. (0.5547,1.9434)
    .. controls (0.6637,1.9348) and (0.7679,1.8974) .. (0.8716,1.8653)
    .. controls (1.0321,1.8101) and (1.1932,1.7522) .. (1.3420,1.6697)
    .. controls (1.3671,1.6622) and (1.3911,1.6147) .. (1.4083,1.6518)
    .. controls (1.4623,1.7160) and (1.5163,1.7802) .. (1.5702,1.8444)
    .. controls (1.5154,1.8979) and (1.4433,1.9287) .. (1.3757,1.9624)
    .. controls (1.3666,2.1156) and (1.2403,2.2511) .. (1.0881,2.2707)
    .. controls (1.0718,2.2731) and (1.0554,2.2743) .. (1.0390,2.2743) -- cycle);
    );

picture ducks.sunglasses;
ducks.sunglasses := 
    image(
    fill unitsquare xscaled 0.38 yscaled 0.04 shifted (0.42,1.8) rotated -17;
    fill unitsquare xscaled 0.10 yscaled 0.04  shifted (0.12,1.8)rotated -17;
    fill fullcircle scaled 0.28 shifted (0.23,1.7675) rotated -20;
    fill fullcircle scaled 0.26 shifted (-0.06,1.74) rotated -20;
    );

picture ducks.glasses;
ducks.glasses := 
    image(
    fill unitsquare xscaled 0.38 yscaled 0.04 shifted (0.42,1.8) rotated -17;
    fill unitsquare xscaled 0.10 yscaled 0.04 shifted (0.12,1.8) rotated -17;
    nofill fullcircle scaled 0.28 shifted (0.23,1.7675) rotated -20;
    eofill fullcircle scaled 0.22 shifted (0.23,1.7675) rotated -20;
    nofill fullcircle scaled 0.26 shifted (-0.06,1.74) rotated -20;
    eofill fullcircle scaled 0.19 shifted (-0.06,1.74) rotated -20;
    );

picture ducks.squareglasses;
ducks.squareglasses := 
    image(
    numeric ducks_corner;
    ducks_corner = 0.05;
    fill unitsquare xscaled 0.37 yscaled 0.04 shifted (0.43,1.8) rotated -17;
    fill unitsquare xscaled 0.10 yscaled 0.04 shifted (0.12,1.8) rotated -17;
    nofill (-0.16,1.62) -- (-0.18,1.85) -- (0.05,1.87) -- (0.04,1.62) -- cycle cornered 2ducks_corner rotated -20;
    nofill (-0.14,1.64) -- (-0.16,1.83) -- (0.03,1.85) -- (0.02,1.64) -- cycle cornered 1.5ducks_corner rotated -20;
    nofill (0.12,1.63) -- (0.10,1.88) -- (0.36,1.90) -- (0.35,1.65) -- cycle cornered 2ducks_corner rotated -20;
    eofill (0.14,1.65) -- (0.12,1.86) -- (0.34,1.88) -- (0.33,1.67) -- cycle cornered 1.5ducks_corner rotated -20;
    );

picture ducks.speech;
ducks.speech := 
    image(
    fill fullcircle xscaled 1.4 yscaled 0.6 shifted (-0.5,1.8);
    fill ((-0.2,1.54) -- (0.2,1.35) -- (0.0,1.6) -- cycle);
    );

picture ducks.book;
ducks.book :=
    image(
    fill unitsquare xscaled 0.4 yscaled -0.6 shifted (0.40,1.20) rotated -20;
    );

picture ducks.signpost[];
ducks.signpost[1] :=
    image(
    numeric ducks_corner;
    ducks_corner = 0.05;
    fill unitsquare xscaled 0.1 yscaled 1.0 shifted (0.80,0.75) 
    cornered ducks_corner;
    fill unitsquare xscaled 0.9 yscaled 0.7 shifted (0.40,1.70) 
    cornered ducks_corner;
    ) rotated -20;

ducks.signpost[2] := 
    image(
    numeric ducks_corner;
    ducks_corner = 0.05;
    fill unitsquare xscaled 0.8 yscaled 0.6 shifted (0.45,1.75) 
    cornered ducks_corner 
    ) rotated -20;

picture ducks.think;
ducks.think :=
    image(
    fill fullcircle xscaled 1.4 yscaled 0.7 shifted (2,2.4);
    fill fullcircle scaled 0.50 shifted (1.55,2.35);
    fill fullcircle scaled 0.50 shifted (2.00,2.15);
    fill fullcircle scaled 0.50 shifted (2.40,2.25);
    fill fullcircle scaled 0.50 shifted (1.60,2.55);
    fill fullcircle scaled 0.50 shifted (2.00,2.60);
    fill fullcircle scaled 0.50 shifted (2.35,2.50);
    fill fullcircle scaled 0.20 shifted (1.65,1.95);
    fill fullcircle scaled 0.12 shifted (1.55,1.80);
    fill fullcircle scaled 0.06 shifted (1.47,1.70);
    );

picture ducks.icecream[];
ducks.icecream[1] :=
    image(fill (((0.35,1.20)--(0.50,0.60)--(0.75,1.20) -- cycle) rotated -20););

ducks.icecream[2] := 
    image(fill fullcircle scaled 0.24 shifted (0.85,1.03););

ducks.icecream[3] :=
    image(fill fullcircle scaled 0.24 shifted (1.05,0.95););

ducks.icecream[4] := 
    image(fill fullcircle scaled 0.24 shifted (0.95,1.10););

picture ducks.magicwand;
ducks.magicwand := 
    image(
    fill unitsquare xscaled 0.1 yscaled -0.58 shifted (0.27,1.23) rotated -30;
    fill unitsquare xscaled 0.1 yscaled -0.10 shifted (0.27,1.13) rotated -30 withcolor 1;
    );

picture ducks.cricket;
ducks.cricket := 
    image(
    numeric ducks_corner;
    ducks_corner = 0.05;
    fill unitsquare xscaled 0.3 yscaled 1 shifted (0.4,1.2) rotated -30
    cornered 2ducks_corner;
    fill unitsquare xscaled 0.1 yscaled 0.5 shifted (0.5,0.8) rotated -30
    cornered 2ducks_corner;
    );

picture ducks.rollingpin;
ducks.rollingpin := 
    image(
    numeric ducks_corner;
    ducks_corner = 0.05;
    fill unitsquare xscaled 0.26 yscaled 0.9 shifted (-0.18,0.85) rotated -60
    cornered 2ducks_corner;
    fill unitsquare xscaled 0.10 yscaled 1.3 shifted (-0.10,0.65) rotated -60
    cornered ducks_corner;
    );

picture ducks.lightsaber[];
ducks.lightsaber[1] :=
    image(
    numeric ducks_corner;
    ducks_corner = 0.05;
    fill unitsquare xscaled 0.10 yscaled 1.6 shifted (0.50,0.9) rotated -30
    cornered ducks_corner
    );

ducks.lightsaber[2] :=
    image(
    numeric ducks_corner;
    ducks_corner = 0.05;
    fill unitsquare xscaled 0.16 yscaled 0.5 shifted (0.47,0.7) rotated -30
    cornered ducks_corner
    );

picture ducks.cake[];
ducks.cake[1] :=
    image(
    fill fullcircle xscaled 0.80 yscaled 0.4 shifted (1.00,0.50);
    fill unitsquare xscaled 0.80 yscaled 0.2 shifted (0.60,0.50);
    fill fullcircle xscaled 0.80 yscaled 0.4 shifted (1.00,0.70);
    );

ducks.cake[2] :=
    image(
    fill unitsquare xscaled 0.05 yscaled 0.2 shifted (0.75,0.75);
    fill unitsquare xscaled 0.05 yscaled 0.2 shifted (1.200,0.75);
    fill unitsquare xscaled 0.05 yscaled 0.2 shifted (0.975,0.65);
    );

ducks.cake[3] := 
    image(
    fill fullcircle xscaled 0.06 yscaled 0.12 shifted (1.000,0.93);
    fill fullcircle xscaled 0.06 yscaled 0.12 shifted (1.225,1.03);
    fill fullcircle xscaled 0.06 yscaled 0.12 shifted (0.775,1.03);
    );

picture ducks.pizza;
ducks.pizza := 
    image(
    fill fullcircle xscaled 0.80 yscaled 0.40 shifted (1.00,0.60)
    withcolor \MPcolor{xcolorbrown};
    fill fullcircle xscaled 0.68 yscaled 0.32 shifted (1.00,0.60)
    withcolor .7[\MPcolor{xcolorblack},\MPcolor{xcolorred}];
    fill fullcircle xscaled 0.13 yscaled 0.08 shifted (1.15,0.65)
    withcolor .85[\MPcolor{xcoloryellow},\MPcolor{xcolorwhite}];
    fill fullcircle xscaled 0.13 yscaled 0.08 shifted (0.81,0.57)
    withcolor .85[\MPcolor{xcoloryellow},\MPcolor{xcolorwhite}];
    fill fullcircle xscaled 0.13 yscaled 0.08 shifted (0.95,0.68)
    withcolor .85[\MPcolor{xcoloryellow},\MPcolor{xcolorwhite}];
    fill fullcircle xscaled 0.13 yscaled 0.08 shifted (1.02,0.54)
    withcolor .85[\MPcolor{xcoloryellow},\MPcolor{xcolorwhite}];
    fill fullcircle xscaled 0.14 yscaled 0.04 shifted (1.09,0.54)
    withcolor .4[\MPcolor{xcolorbrown},\MPcolor{xcolorgreen}];
    fill fullcircle xscaled 0.14 yscaled 0.04 shifted (1.00,0.34)
    rotated  20 withcolor .4[\MPcolor{xcolorbrown},\MPcolor{xcolorgreen}];
    fill fullcircle xscaled 0.14 yscaled 0.04 shifted (0.90,1.05)
    rotated -20 withcolor .4[\MPcolor{xcolorbrown},\MPcolor{xcolorgreen}];
    fill fullcircle xscaled 0.06 yscaled 0.12 shifted (1.00,0.60)
    withcolor .4[\MPcolor{xcolorbrown},\MPcolor{xcolorgreen}];
    );

picture ducks.hockey;
ducks.hockey := 
    image(
    numeric ducks_corner;
    ducks_corner = 0.05;
    fill unitsquare xscaled 0.10 yscaled 1.5 shifted (0.5,0.6) rotated -30
    cornered ducks_corner; 
    fill unitsquare xscaled 0.65 yscaled 0.2 shifted (0.2,0.2)
    cornered 3ducks_corner;
    );

picture ducks.baguette[];
ducks.baguette[1] :=
    image(
    numeric ducks_corner;
    ducks_corner = 0.05;
    fill unitsquare xscaled 0.3 yscaled 1.28 shifted (0.4,0.72) rotated -30
    cornered 4ducks_corner;
    );

ducks.baguette[2] :=
    image(
    fill fullcircle xscaled 0.2 yscaled 0.06 shifted (1.44,1.1) rotated 5;
    fill fullcircle xscaled 0.2 yscaled 0.06 shifted (1.30,0.9) rotated 5;
    fill fullcircle xscaled 0.2 yscaled 0.06 shifted (1.16,0.7) rotated 5;
    fill fullcircle xscaled 0.2 yscaled 0.06 shifted (1.02,0.5) rotated 5;
    );

picture ducks.football[];
ducks.football[1] := 
    image(
    fill fullcircle scaled 0.64 shifted (1.2,0.33);
    );

ducks.football[2] :=
    image(
    fill ((1.06,0.30) -- (1.01,0.17) -- (1.14,0.08) -- (1.26,0.14) -- (1.20,0.28) -- cycle);
    fill ((1.37,0.14) -- (1.46,0.27) -- (1.59,0.27) -- (1.41,0.04) -- cycle);
    fill ((1.28,0.38) -- (1.22,0.52) -- (1.33,0.61) -- (1.45,0.51) -- (1.43,0.37) -- cycle);
    fill ((0.87,0.44) -- (1.02,0.40) -- (1.10,0.53) -- (1.07,0.62) -- (0.94,0.57) -- cycle);
    clip currentpicture to (fullcircle scaled 0.64 shifted (1.2,0.33));
    );

picture ducks.wing;
ducks.wing := 
    image(
    fill (
    (1.47,0.56) .. controls (1.51,0.59) and (1.57,0.62) ..
    (1.60,0.66) .. controls (1.61,0.70) and (1.51,0.69) ..
    (1.47,0.69) .. controls (1.48,0.72) and (1.41,0.76) ..
    (1.37,0.74) .. controls (1.35,0.79) and (1.33,0.81) ..
    (1.25,0.80) .. controls (1.25,0.86) and (1.18,0.88) ..
    (1.15,0.88) .. controls (1.20,1.01) and (0.40,0.79) ..
    (0.52,0.57) .. controls (0.63,0.26) and (1.22,0.43) ..
    (1.47,0.56) -- cycle);
    );

picture ducks.milkshake[];
ducks.milkshake[1] := 
    image(
    fill fullcircle xscaled 0.34 yscaled 0.1 shifted (0.8,0.50) rotated -10;
    fill fullcircle xscaled 0.24 yscaled 0.06 shifted (0.8,0.55) rotated -10;
    );

ducks.milkshake[2] :=
    image(
    fill fullcircle xscaled 0.36 yscaled 0.80 shifted (0.8,0.94) rotated -10;
    fill fullcircle xscaled 0.30 yscaled 0.72 shifted (0.8,0.94) rotated -10;
    clip currentpicture to 
    (unitsquare xscaled 0.44 yscaled 0.53 shifted (0.58,0.5) rotated -10);
    );

ducks.milkshake[3] := 
    image(
    fill fullcircle scaled 0.10 shifted (0.83,0.92);
    fill fullcircle scaled 0.10 shifted (0.88,0.90);
    fill fullcircle scaled 0.10 shifted (0.93,0.92);
    fill fullcircle scaled 0.10 shifted (0.99,0.91);
    fill fullcircle scaled 0.10 shifted (1.06,0.86);
    fill fullcircle scaled 0.10 shifted (1.13,0.87);
    fill fullcircle scaled 0.10 shifted (0.85,0.99);
    fill fullcircle scaled 0.14 shifted (0.90,0.98);
    fill fullcircle scaled 0.14 shifted (1.00,0.98);
    fill fullcircle scaled 0.14 shifted (1.10,0.95);
    );

ducks.milkshake[4] := 
    image(
    fill fullcircle scaled 0.10 shifted (1.00,1.10);
    );
    
ducks.milkshake[5] := 
    image(
    fill fullcircle scaled 0.10 shifted (0.94,1.05);
    fill fullcircle scaled 0.10 shifted (1.03,1.03);
    );

ducks.milkshake[6] := 
    image(
    fill fullcircle xscaled 0.34 yscaled 0.1 shifted (0.8,0.50) rotated -10;
    );

ducks.milkshake[7] := 
    image(
    fill unitsquare xscaled 0.02 yscaled 0.27 shifted (1.2,0.58) rotated 20;
    );

picture ducks.wine[];
ducks.wine[1] := 
    image(
    fill fullcircle xscaled 0.34 yscaled 0.1 shifted (0.8,0.50) rotated -10;
    fill fullcircle xscaled 0.24 yscaled 0.06 shifted (0.8,0.55) rotated -10;
    fill fullcircle xscaled 0.06 yscaled 0.4 shifted (0.8,0.7) rotated -10;
    draw image(
    fill (fullcircle xscaled 0.36 yscaled 0.8 shifted (0.8,1.1) rotated -10);
    clip currentpicture to (unitsquare xscaled 0.44 yscaled 0.53 shifted (0.58,0.5) rotated -10);
    )); 

ducks.wine[2] :=
    image(
    fill (fullcircle xscaled 0.3 yscaled 0.72 shifted (0.8,1.1) rotated -10);
    clip currentpicture to
    (unitsquare xscaled 0.44 yscaled 0.37 shifted (0.58,0.5) rotated -10);
    );

picture ducks.prison[];
ducks.prison[1] :=
    image(
    fill fullcircle scaled 0.6 shifted (1.5,0.25);
    nofill fullcircle xscaled 0.20 yscaled 0.14 shifted (1.2,0.1);
    nofill fullcircle xscaled 0.12 yscaled 0.08 shifted (1.2,0.1);
    nofill fullcircle xscaled 0.20 yscaled 0.14 shifted (1.05,-0.05);
    nofill fullcircle xscaled 0.12 yscaled 0.08 shifted (1.05,-0.05);
    nofill fullcircle xscaled 0.20 yscaled 0.14 shifted (0.87,-0.2);
    eofill fullcircle xscaled 0.12 yscaled 0.08 shifted (0.87,-0.2);
    nofill fullcircle scaled  0.14 shifted (0.72,-0.2);
    eofill fullcircle xscaled 0.12 yscaled 0.08 shifted (0.72,-0.2);
    nofill fullcircle xscaled 0.20 yscaled 0.14 shifted (0.4,-1.05) rotated 70;
    nofill fullcircle xscaled 0.12 yscaled 0.08 shifted (0.4,-1.05) rotated 70;
    nofill fullcircle xscaled 0.20 yscaled 0.14 shifted (0.2,-0.95) rotated 70;
    nofill fullcircle xscaled 0.12 yscaled 0.08 shifted (0.2,-0.95) rotated 70;
    nofill fullcircle xscaled 0.20 yscaled 0.14 shifted (0.22,-0.58) rotated 70;
    eofill fullcircle xscaled 0.12 yscaled 0.08 shifted (0.22,-0.58) rotated 70;
    nofill fullcircle xscaled 0.20 yscaled 0.14 shifted (-0.33,-0.55) rotated 110;
    eofill fullcircle xscaled 0.12 yscaled 0.08 shifted (-0.33,-0.55) rotated 110;
    ); 

ducks.prison[2] :=
    image(
    nofill fullcircle xscaled 0.20 yscaled 0.14 shifted (-0.07,-0.6) rotated 110;
    eofill fullcircle xscaled 0.12 yscaled 0.08 shifted (-0.07,-0.6) rotated 110;
    clip currentpicture to
    (unitsquare xscaled 0.18 yscaled 0.1 shifted (0.45,0.15) rotated -10);
    );

picture ducks.torch[];
ducks.torch[1] :=
    image(
    fill ((1.4338,1.0258) .. controls (1.4308,0.8877) and (1.3468,0.8997) ..
    (1.2447,0.7481) .. controls (1.1427,0.8982) and (1.0721,0.8892) ..
    (1.0646,1.0243) .. controls (1.0541,1.1714) and (1.2642,1.1654) ..
    (1.2492,1.3860) .. controls (1.3093,1.3110) and (1.4383,1.2705) ..
    (1.4338,1.0258) -- cycle);
    );

ducks.torch[2] :=
    image(
    fill ((1.4338,1.0258) .. controls (1.4308,0.8877) and (1.3468,0.8997) ..
    (1.2447,0.7481) .. controls (1.1427,0.8982) and (1.0721,0.8892) ..
    (1.0646,1.0243) .. controls (1.0541,1.1714) and (1.2642,1.1654) ..
    (1.2492,1.3860) .. controls (1.3093,1.3110) and (1.4383,1.2705) ..
    (1.4338,1.0258) -- cycle) shifted (17/(1cm),15/(1cm)) scaled 0.67;
    ); 

ducks.torch[3] :=
    image(
    fill ((1.4338,1.0258) .. controls (1.4308,0.8877) and (1.3468,0.8997) ..
    (1.2447,0.7481) .. controls (1.1427,0.8982) and (1.0721,0.8892) ..
    (1.0646,1.0243) .. controls (1.0541,1.1714) and (1.2642,1.1654) ..
    (1.2492,1.3860) .. controls (1.3093,1.3110) and (1.4383,1.2705) ..
    (1.4338,1.0258) -- cycle) shifted (53.5/(1cm),45.3/(1cm)) scaled 0.4;
    );

ducks.torch[4] := 
    image(
    fill ((1.1,0.96) -- (0.77,0.25) -- (0.83,0.25) -- (1.3,0.86) -- cycle)
    cornered ducks_corner;
    fill fullcircle xscaled 0.4 yscaled 0.16 shifted (0.62,1.32) rotated -28;
    ); 

picture ducks.basket[];
ducks.basket[1] :=
    image(
    fill (subpath (4,8) of (fullcircle scaled 0.7) -- cycle) shifted (1,0.61);
    nofill (halfcircle xscaled 0.7 yscaled 1) -- cycle shifted (1,0.6);
    eofill ((halfcircle xscaled 0.6 yscaled 0.9) -- cycle) shifted (1,0.6);
    nofill fullcircle xscaled 0.7 yscaled 0.2 shifted (1,0.6);
    eofill fullcircle xscaled 0.6 yscaled 0.14 shifted (1,0.6);
    );

ducks.basket[2] := 
    image(
    fill fullcircle xscaled 0.6 yscaled 0.14 shifted (1,0.6);
    );

picture ducks.easter[];
ducks.easter[1] := 
    image(
    fill fullcircle xscaled 0.18 yscaled 0.26 shifted (0.95,0.72) rotated  -5;
    clip currentpicture to
    ((halfcircle xscaled 0.6 yscaled 0.9 shifted (1,0.6)) --
    (subpath (4,8) of fullcircle xscaled 0.6 yscaled 0.14 shifted (1,0.6)) -- cycle);
    );

ducks.easter[2] := 
    image(
    fill fullcircle xscaled 0.18 yscaled 0.26 shifted (0.94,0.42) rotated  10;
    clip currentpicture to
    ((halfcircle xscaled 0.6 yscaled 0.9 shifted (1,0.6)) --
    (subpath (4,8) of fullcircle xscaled 0.6 yscaled 0.14 shifted (1,0.6)) -- cycle);
    );

ducks.easter[3] :=
    image(
    fill fullcircle xscaled 0.18 yscaled 0.26 shifted (0.70,1.08) rotated -30;
    clip currentpicture to
    ((halfcircle xscaled 0.6 yscaled 0.9 shifted (1,0.6)) --
    (subpath (4,8) of fullcircle xscaled 0.6 yscaled 0.14 shifted (1,0.6)) -- cycle);
    );

picture ducks.horsetail;
ducks.horsetail := 
    image(
    fill ((1.7248,1.3553) .. controls (2.0530,1.3369) and (2.1427,1.1604) ..
    (2.2915,0.9970) .. controls (2.4759,0.7946) and (2.9531,0.8890) ..
    (2.7668,0.9003) .. controls (2.4670,0.9184) and (2.5158,1.1488) ..
    (2.3907,1.3152) .. controls (2.2788,1.4641) and (1.9414,1.5945) ..
    (1.7248,1.3553) -- cycle);
    );

picture ducks.crozier;
ducks.crozier := 
    image(
    nofill fullcircle scaled 0.4 shifted (1.5,1.6);
    eofill fullcircle scaled 0.2 shifted (1.5,1.6);
    clip currentpicture to (unitsquare xscaled 0.5 yscaled -0.301 shifted (0.6,2.3) rotated -20);
    fill unitsquare xscaled 0.1 yscaled 1.5 shifted (0.663,0.5) rotated -20;
    );

picture ducks.stethoscope;
ducks.stethoscope := 
    image(
    fill unitsquare xscaled 0.05 yscaled 0.54 shifted (0.08,0.7) rotated -18
    cornered .5ducks_corner ;
    fill fullcircle scaled 0.2 shifted (0.35,0.7) ;
    fill unitsquare xscaled 0.05 yscaled 0.42 shifted (0.53,1.3) rotated -30
    cornered .5ducks_corner;
    draw image(
    nofill unitsquare xscaled -0.4 yscaled -0.45 shifted (0.775,1.35) rotated -30 cornered 3ducks_corner;
    eofill unitsquare xscaled -0.3 yscaled -0.35 shifted (0.725,1.30) rotated -30 cornered 2ducks_corner;
    clip currentpicture
    to (((0.36,0.89) -- (0.36,1.36) -- (0.79,1.36)
    -- (0.79,0.89) -- (0.65,0.89) -- (0.65,0.96)
    -- (0.5,0.96) -- (0.5,0.89) -- cycle) rotated -30);
    ));

picture ducks.snowduck;
ducks.snowduck := 
    image(
    fill unitsquare xscaled  0.05 yscaled  1.15 shifted ( 0.65,0.65) rotated -25;
    fill unitsquare xscaled  0.05 yscaled  0.35 shifted ( 1.55,0.15) rotated  35;
    fill unitsquare xscaled  0.05 yscaled  0.30 shifted ( 0.40,1.70) rotated -35;
    fill unitsquare xscaled -0.05 yscaled -0.35 shifted (-0.30,2.00) rotated -60;
    );

picture ducks.cheese[];
ducks.cheese[1] :=
    image(
    fill ((-0.3200,0.8058) -- (0.0608,0.7220) -- (0.0608,0.6366)
    -- (-0.3200,0.5410) -- (0.2143,0.4236)
    .. controls (0.3395,0.4810) and (0.4241,0.5627) .. (0.4117,0.6253)
    -- (0.4117,0.7634)
    .. controls (0.4261,0.8618) and (0.2607,0.8954) .. (0.1907,0.8962)
    -- cycle);
    currentpicture := currentpicture shifted (26/(1cm),-2/(1cm));
    );

ducks.cheese[2] := 
    image(
    fill ((-0.3200,0.8057) -- (-0.3200,0.5410) -- (0.2143,0.4236)
    -- (0.2143,0.7381) -- cycle);
    currentpicture := currentpicture shifted (26/(1cm),-2/(1cm));
    );

ducks.cheese[3] :=
    image(
    fill fullcircle scaled 0.08 shifted (-0.23,0.71);
    fill fullcircle scaled 0.08 shifted (0.0,0.55) ;
    fill fullcircle scaled 0.04 shifted (-0.23,0.58);
    fill fullcircle scaled 0.04 shifted (-0.15,0.6);
    fill fullcircle scaled 0.04 shifted (-0.1,0.7);
    fill fullcircle scaled 0.04 shifted (0.1,0.65);
    fill fullcircle scaled 0.04 shifted (0,0.65);
    fill fullcircle scaled 0.04 shifted (0.1,0.5);
    fill fullcircle scaled 0.02 shifted (0.07,0.55);
    fill fullcircle scaled 0.02 shifted (0.12,0.6);
    fill fullcircle scaled 0.02 shifted (-0.08,0.54);
    currentpicture := currentpicture shifted (26/(1cm),-2/(1cm));
    );

picture ducks.vampire[];
ducks.vampire[1] :=
    image(
    fill ((0.55,1.28) -- (0.575,1.22) -- (0.6,1.29) -- cycle);
    );

ducks.vampire[2] := 
    image(
    fill ((0.6,1.20) -- (0.625,1.16) -- (0.65,1.223) -- cycle);
    );

picture ducks.shovel[];
ducks.shovel[1] := 
    image(
    fill unitsquare xscaled 0.1 yscaled 1.4 shifted (0.87, 0.28) rotatedaround((0.91, 0.88), -23);
    );

ducks.shovel[2] :=
    image(
    fill (0.6133, 0.9536)
    .. controls (0.8388, 0.8117) and (0.9253, 0.7517) .. (1.1962, 0.6696)
    -- (0.8332, 0.1263)
    .. controls (0.6458, 0.11) and (0.5417, 0.1644) .. (0.4517, 0.3034) -- cycle;
    );

picture ducks.pickaxe[];
ducks.pickaxe[1] :=
    image(
    fill unitsquare xscaled 0.1 yscaled 1.4 shifted (0.87, 0.28)
    rotatedaround((0.91, 0.88), -23)
    );

ducks.pickaxe[2] :=
    image( 
    fill (-0.0085, 0.6858)
    .. controls (0.6422, 0.3523) and (0.7609, 0.3068) .. (1.4114, 0.1108)
    .. controls (0.6589, 0.1246) and (0.5556, 0.1887) .. (-0.0085, 0.6858)
    -- cycle;
    );

picture ducks.umbrella[];
ducks.umbrella[1] := 
    image(
    fill ((0.6922,0.5942) -- (0.7426,0.6103)
    .. controls (0.8276,0.3884) and (0.8855,0.4523) .. (0.9333,0.6543)
    -- (0.9334,0.6545) -- (0.9335,0.6547)
    .. controls (1.0347,1.0671) and (1.2906,1.9565) .. (1.2906,1.9565)
    -- (1.3415,1.9419)
    .. controls (1.3415,1.9419) and (1.0855,1.0519) .. (0.9849,0.6423)
    -- (0.9848,0.6420)
    .. controls (0.9240,0.3633) and (0.7874,0.3312) .. (0.6922,0.5942)
    -- cycle)
    );

ducks.umbrella[2] := 
    image(
    fill ((0.2185,1.9927)
    .. controls (0.3559,2.1962) and (0.6837,2.0720) .. (0.6761,1.8240)
    .. controls (0.8398,2.0111) and (1.1891,1.9216) .. (1.1685,1.6915)
    .. controls (1.3000,1.8765) and (1.6639,1.7626) .. (1.6607,1.5356)
    .. controls (1.7865,1.7271) and (2.1350,1.6950) .. (2.1626,1.4589)
    .. controls (2.4996,2.5771) and (0.5644,3.2631) .. (0.2185,1.9927)
    -- cycle)
    );

picture ducks.umbrellaclosed[];
ducks.umbrellaclosed[1] :=
    image(
    fill (1.3401,0.6996) -- (1.2872,0.7019)
    .. controls (1.2840,0.9395) and (1.2076,0.8995) .. (1.0930,0.7264)
    -- (1.0929,0.7262) -- (1.0928,0.7261)
    .. controls (0.8555,0.3739) and (0.9223,0.4608) .. (0.9223,0.4608)
    -- (0.8795,0.4920)
    .. controls (0.8795,0.4920) and (0.8131,0.4057) .. (1.0488,0.7554)
    -- (1.0489,0.7556)
    .. controls (1.2022,0.9963) and (1.3414,0.9793) .. (1.3401,0.6996)
    -- cycle;
    );

ducks.umbrellaclosed[2] := 
    image(
    fill (0.6827,0.1263)
    -- (0.8038,0.6188) -- (0.9548,0.6494) -- (0.9520,0.8231)
    -- (1.1945,0.6529) -- (1.0218,0.5885) -- (1.0465,0.4566)
    -- cycle;
    );

picture ducks.handbag[];
ducks.handbag[1] := 
    image(
    fill ((0.7811,0.1751) -- (1.4913,0.3097) -- (1.3315,0.7086) -- (0.7832,0.6152) -- cycle);
    );

ducks.handbag[2] := 
    image(
    fill ((0.8857,0.4354)
    .. controls (0.7861,0.9811) and (1.1796,1.0719) .. (1.2866,0.5155)
    -- (1.2043,0.4996)
    .. controls (1.1247,0.8952) and (0.9051,0.8883) .. (0.9676,0.4536)
    -- cycle));

picture ducks.overleaf;
ducks.overleaf := 
    image(
    nofill (1.2699,0.6095)
    .. controls (1.2710,0.5992) and (1.2752,0.5910) .. (1.2822,0.5852)
    .. controls (1.2892,0.5793) and (1.2983,0.5763) .. (1.3095,0.5763)
    .. controls (1.3165,0.5762) and (1.3233,0.5778) .. (1.3295,0.5809)
    .. controls (1.3353,0.5840) and (1.3401,0.5885) .. (1.3436,0.5940)
    -- (1.3792,0.5940)
    .. controls (1.3731,0.5785) and (1.3640,0.5664) .. (1.3521,0.5578)
    .. controls (1.3398,0.5492) and (1.3252,0.5447) .. (1.3103,0.5449)
    .. controls (1.3002,0.5448) and (1.2902,0.5467) .. (1.2808,0.5505)
    .. controls (1.2718,0.5544) and (1.2636,0.5601) .. (1.2567,0.5672)
    .. controls (1.2500,0.5742) and (1.2446,0.5825) .. (1.2410,0.5915)
    .. controls (1.2372,0.6005) and (1.2353,0.6101) .. (1.2353,0.6198)
    .. controls (1.2352,0.6294) and (1.2370,0.6389) .. (1.2404,0.6479)
    .. controls (1.2438,0.6567) and (1.2489,0.6647) .. (1.2554,0.6715)
    .. controls (1.2625,0.6790) and (1.2709,0.6850) .. (1.2802,0.6892)
    .. controls (1.2891,0.6933) and (1.2988,0.6954) .. (1.3086,0.6955)
    .. controls (1.3207,0.6955) and (1.3325,0.6926) .. (1.3432,0.6871)
    .. controls (1.3540,0.6813) and (1.3633,0.6732) .. (1.3705,0.6634)
    .. controls (1.3751,0.6571) and (1.3786,0.6501) .. (1.3807,0.6427)
    .. controls (1.3831,0.6341) and (1.3842,0.6253) .. (1.3841,0.6164)
    .. controls (1.3840,0.6139) and (1.3839,0.6119) .. (1.3837,0.6092)
    .. controls (1.3458,0.6093) and (1.3079,0.6094) .. (1.2699,0.6095) -- cycle;
    nofill (1.3486,0.6358)
    .. controls (1.3458,0.6453) and (1.3410,0.6525) .. (1.3343,0.6575)
    .. controls (1.3276,0.6625) and (1.3192,0.6650) .. (1.3090,0.6650)
    .. controls (1.3004,0.6651) and (1.2920,0.6622) .. (1.2852,0.6570)
    .. controls (1.2783,0.6517) and (1.2733,0.6443) .. (1.2711,0.6359)
    .. controls (1.2969,0.6359) and (1.3228,0.6358) .. (1.3486,0.6358) -- cycle;
    nofill (1.5160,0.5487) -- (1.5160,0.5662)
    .. controls (1.5122,0.5593) and (1.5064,0.5538) .. (1.4992,0.5505)
    .. controls (1.4920,0.5471) and (1.4828,0.5455) .. (1.4715,0.5455)
    .. controls (1.4505,0.5455) and (1.4329,0.5527) .. (1.4187,0.5670)
    .. controls (1.4046,0.5814) and (1.3976,0.5993) .. (1.3975,0.6206)
    .. controls (1.3975,0.6303) and (1.3993,0.6401) .. (1.4029,0.6492)
    .. controls (1.4063,0.6580) and (1.4114,0.6661) .. (1.4180,0.6729)
    .. controls (1.4246,0.6801) and (1.4327,0.6857) .. (1.4416,0.6895)
    .. controls (1.4509,0.6932) and (1.4608,0.6950) .. (1.4708,0.6949)
    .. controls (1.4800,0.6951) and (1.4891,0.6933) .. (1.4976,0.6896)
    .. controls (1.5050,0.6862) and (1.5112,0.6807) .. (1.5156,0.6739)
    -- (1.5156,0.6911) -- (1.5480,0.6911) -- (1.5480,0.5485) -- (1.5160,0.5485)
    -- (1.5160,0.5487) -- cycle;
    nofill (1.4436,0.5910)
    .. controls (1.4513,0.5831) and (1.4619,0.5787) .. (1.4729,0.5789)
    .. controls (1.4833,0.5789) and (1.4926,0.5829) .. (1.5006,0.5911)
    .. controls (1.5083,0.5986) and (1.5126,0.6088) .. (1.5126,0.6196)
    .. controls (1.5127,0.6307) and (1.5084,0.6414) .. (1.5006,0.6494)
    .. controls (1.4926,0.6577) and (1.4833,0.6619) .. (1.4727,0.6619)
    .. controls (1.4618,0.6621) and (1.4514,0.6577) .. (1.4439,0.6499)
    .. controls (1.4361,0.6423) and (1.4318,0.6318) .. (1.4317,0.6205)
    .. controls (1.4315,0.6092) and (1.4355,0.5991) .. (1.4436,0.5910) -- cycle;
    nofill (1.6366,0.6913) -- (1.6366,0.6617) -- (1.6127,0.6617) -- (1.6127,0.5487)
    -- (1.5806,0.5487) -- (1.5806,0.6617) -- (1.5637,0.6617) -- (1.5637,0.6913)
    -- (1.5796,0.6913) -- (1.5796,0.6952)
    .. controls (1.5796,0.7102) and (1.5838,0.7214) .. (1.5922,0.7288)
    .. controls (1.6005,0.7362) and (1.6131,0.7399) .. (1.6300,0.7399)
    .. controls (1.6324,0.7398) and (1.6347,0.7396) .. (1.6370,0.7395)
    -- (1.6370,0.7097) -- (1.6347,0.7097)
    .. controls (1.6272,0.7097) and (1.6218,0.7084) .. (1.6186,0.7059)
    .. controls (1.6154,0.7034) and (1.6138,0.6993) .. (1.6138,0.6936)
    -- (1.6138,0.6910)
    .. controls (1.6214,0.6913) and (1.6290,0.6912) .. (1.6366,0.6913) -- cycle;
    nofill (1.1906,0.5487) -- (1.2231,0.5487) -- (1.2231,0.7374) -- (1.1906,0.7374) -- cycle;
    nofill (0.9820,0.6095)
    .. controls (0.9831,0.5992) and (0.9872,0.5910) .. (0.9943,0.5852)
    .. controls (1.0013,0.5793) and (1.0104,0.5763) .. (1.0216,0.5763)
    .. controls (1.0285,0.5762) and (1.0354,0.5778) .. (1.0416,0.5809)
    .. controls (1.0474,0.5839) and (1.0522,0.5885) .. (1.0556,0.5940) -- (1.0914,0.5940)
    .. controls (1.0854,0.5785) and (1.0763,0.5664) .. (1.0643,0.5578)
    .. controls (1.0522,0.5492) and (1.0382,0.5449) .. (1.0225,0.5449)
    .. controls (1.0124,0.5448) and (1.0024,0.5467) .. (0.9931,0.5505)
    .. controls (0.9840,0.5544) and (0.9758,0.5601) .. (0.9690,0.5672)
    .. controls (0.9622,0.5742) and (0.9569,0.5825) .. (0.9532,0.5915)
    .. controls (0.9495,0.6005) and (0.9475,0.6101) .. (0.9475,0.6198)
    .. controls (0.9475,0.6294) and (0.9492,0.6389) .. (0.9527,0.6479)
    .. controls (0.9560,0.6567) and (0.9611,0.6647) .. (0.9677,0.6715)
    .. controls (0.9747,0.6790) and (0.9830,0.6850) .. (0.9924,0.6892)
    .. controls (1.0012,0.6933) and (1.0109,0.6955) .. (1.0207,0.6955)
    .. controls (1.0327,0.6955) and (1.0446,0.6927) .. (1.0552,0.6871)
    .. controls (1.0660,0.6813) and (1.0753,0.6732) .. (1.0826,0.6634)
    .. controls (1.0871,0.6571) and (1.0906,0.6501) .. (1.0926,0.6427)
    .. controls (1.0949,0.6341) and (1.0960,0.6253) .. (1.0959,0.6164)
    .. controls (1.0959,0.6139) and (1.0957,0.6119) .. (1.0956,0.6092)
    .. controls (1.0577,0.6100) and (1.0199,0.6095) .. (0.9820,0.6095) -- cycle;
    nofill (1.0606,0.6358)
    .. controls (1.0578,0.6453) and (1.0531,0.6526) .. (1.0463,0.6575)
    .. controls (1.0397,0.6625) and (1.0312,0.6650) .. (1.0210,0.6650)
    .. controls (1.0124,0.6651) and (1.0041,0.6622) .. (0.9973,0.6570)
    .. controls (0.9903,0.6517) and (0.9853,0.6443) .. (0.9830,0.6359)
    .. controls (1.0089,0.6359) and (1.0348,0.6358) .. (1.0606,0.6358) -- cycle;
    nofill (1.1761,0.6624)
    .. controls (1.1632,0.6614) and (1.1542,0.6580) .. (1.1492,0.6523)
    .. controls (1.1441,0.6465) and (1.1415,0.6363) .. (1.1415,0.6214)
    -- (1.1415,0.5487) -- (1.1083,0.5487) -- (1.1083,0.6913) -- (1.1394,0.6913)
    -- (1.1394,0.6748)
    .. controls (1.1438,0.6808) and (1.1494,0.6856) .. (1.1559,0.6891)
    .. controls (1.1621,0.6923) and (1.1690,0.6938) .. (1.1760,0.6937)
    .. controls (1.1760,0.6833) and (1.1761,0.6728) .. (1.1761,0.6624) -- cycle;
    nofill (0.8646,0.8092)
    .. controls (0.8244,0.8248) and (0.6787,0.8306) .. (0.6784,0.7437)
    .. controls (0.6359,0.7165) and (0.6078,0.6721) .. (0.6078,0.6246)
    .. controls (0.6077,0.5410) and (0.7016,0.4916) .. (0.7705,0.5391)
    .. controls (0.8394,0.5866) and (0.8268,0.6919) .. (0.7486,0.7217)
    .. controls (0.7411,0.7246) and (0.7248,0.7297) .. (0.7117,0.7286)
    .. controls (0.6931,0.7168) and (0.6704,0.6924) .. (0.6597,0.6682)
    .. controls (0.6918,0.7064) and (0.7528,0.6983) .. (0.7737,0.6530)
    .. controls (0.7947,0.6076) and (0.7614,0.5559) .. (0.7115,0.5562)
    .. controls (0.6914,0.5562) and (0.6724,0.5649) .. (0.6594,0.5802)
    .. controls (0.6410,0.6019) and (0.6363,0.6254) .. (0.6400,0.6484)
    .. controls (0.6532,0.7289) and (0.7487,0.7748) .. (0.8197,0.7924)
    .. controls (0.7966,0.7801) and (0.7548,0.7600) .. (0.7255,0.7380)
    .. controls (0.8108,0.7051) and (0.8246,0.7770) .. (0.8646,0.8092) -- cycle;
    eofill (0.8731,0.5487) -- (0.8189,0.6913) -- (0.8542,0.6913) -- (0.8874,0.5965)
    -- (0.9217,0.6913) -- (0.9561,0.6913) -- (0.8991,0.5487) -- cycle;
    );

picture ducks.cocktail;
ducks.cocktail := 
    image(
    fill (fullcircle xscaled 0.34 yscaled 0.10 shifted (0.8,0.50) rotated -10)
    withcolor .1[\MPcolor{xcolorwhite},\MPcolor{xcolorcyan}];
    fill (fullcircle xscaled 0.24 yscaled 0.06 shifted (0.8,0.55) rotated -10)
    withcolor .1[\MPcolor{xcolorwhite},\MPcolor{xcolorcyan}];
    fill (fullcircle xscaled 0.06 yscaled 0.40 shifted (0.8,0.70) rotated -10)
    withcolor .1[\MPcolor{xcolorwhite},\MPcolor{xcolorcyan}];
    fill ((0.92,0.6) -- (0.75,0.9) -- (1.18,0.83) -- cycle)
    withcolor .1[\MPcolor{xcolorwhite},\MPcolor{xcolorcyan}];
    fill ((0.928,0.64) -- (0.85,0.77) -- (1.08,0.77) -- cycle)
    withcolor .6[\MPcolor{xcolorwhite},\MPcolor{xcolorgray}];
    fill fullcircle scaled 0.08 shifted (0.94,0.71) withcolor (0.67,0.81999,0.48999);
    fill fullcircle scaled 0.02 shifted (0.94,0.72)
    withcolor .8[\MPcolor{xcolorblack},\MPcolor{xcolorred}];
    );

picture ducks.mug[];
ducks.mug[1] :=
    image(
    fill (0.000000,2.085940)--(0.000000,0.257813)
    ..controls (0.000000,0.093750) and (0.417969,0.007812)..(0.769531,0.000000)
	..controls (1.113280,-0.003906) and (1.523440,0.117188)..(1.527340,0.246094)
	..controls (1.531250,0.886719) and (1.527340,1.539060)..(1.527340,2.085940)
	--cycle
    ) scaled 0.25 shifted (0.75,0.4);

ducks.mug[2] :=
    image(
    fill (1.527340,2.085940)..controls (1.527340,1.953130) and (1.187500,1.843750)..(0.765625,1.843750)
	..controls (0.343750,1.843750) and (0.000000,1.953130)..(0.000000,2.085940)
	..controls (0.000000,2.218750) and (0.343750,2.328130)..(0.765625,2.328130)
	..controls (1.187500,2.328130) and (1.527340,2.218750)..(1.527340,2.085940)
	--cycle;
    ) scaled 0.25 shifted (0.75,0.4);

ducks.mug[3] :=
    image(
    fill (1.519530,1.722660)..controls (1.519530,1.722660) and (1.742190,1.773440)..(1.847660,1.742190)
	..controls (1.890630,1.726560) and (1.941410,1.695310)..(1.960940,1.652340)
	..controls (2.019530,1.527340) and (2.003910,1.371090)..(1.960940,1.242190)
	..controls (1.906250,1.074220) and (1.710940,0.957031)..(1.640630,0.832031)
	..controls (1.570310,0.707031) and (1.527340,0.523438)..(1.527340,0.523438)
	--(1.527340,0.949219)..controls (1.527340,0.949219) and (1.789060,1.128910)..(1.839840,1.250000)
	..controls (1.886720,1.371090) and (1.910160,1.515630)..(1.832030,1.593750)
	..controls (1.785160,1.640630) and (1.691410,1.621090)..(1.628910,1.589840)
	..controls (1.578130,1.558590) and (1.527340,1.437500)..(1.527340,1.437500)
	--cycle;
    ) scaled 0.25 shifted (0.75,0.4);

ducks.mug[4] :=
    image(
    fill (1.476560,2.093750)..controls (1.476560,1.980470) and (1.156250,1.886720)..(0.765625,1.886720)
	..controls (0.371094,1.886720) and (0.054688,1.980470)..(0.054688,2.093750)
	..controls (0.054688,2.210940) and (0.371094,2.304690)..(0.765625,2.304690)
	..controls (1.156250,2.304690) and (1.476560,2.210940)..(1.476560,2.093750)
	--cycle;
    ) scaled 0.25 shifted (0.75,0.4);

ducks.mug[5] :=
    image(
    fill (0.765625,2.164060)..controls (0.457031,2.164060) and (0.195313,2.105470)..(0.093750,2.023440)
	..controls (0.195313,1.941410) and (0.457031,1.886720)..(0.765625,1.886720)
	..controls (1.074220,1.886720) and (1.335940,1.941410)..(1.433590,2.023440)
	..controls (1.335940,2.105470) and (1.074220,2.164060)..(0.765625,2.164060)
	--cycle;
    ) scaled 0.25 shifted (0.75,0.4);

ducks.mug[6] :=
    image(
    fill (1.175780,1.007810)..controls (1.175780,0.777344) and (0.992188,0.593750)..(0.765625,0.593750)
	..controls (0.535156,0.593750) and (0.351563,0.777344)..(0.351563,1.007810)
	..controls (0.351563,1.234380) and (0.535156,1.417970)..(0.765625,1.417970)
	..controls (0.992188,1.417970) and (1.175780,1.234380)..(1.175780,1.007810)
	--cycle
    ;) scaled 0.25 shifted (0.75,0.4);

ducks.mug[7] :=
    image(
    fill (0.945313,1.152340)..controls (0.925781,1.152340) and (0.906250,1.136720)..(0.906250,1.113280)
	--(0.906250,1.066410)..controls (0.917969,1.062500) and (0.925781,1.058590)..(0.937500,1.058590)
	..controls (0.976563,1.058590) and (1.007810,1.093750)..(1.007810,1.136720)
	..controls (1.007810,1.140630) and (1.007810,1.148440)..(1.007810,1.152340)
	--cycle;
    ) scaled 0.25 shifted (0.75,0.4);

ducks.mug[8] :=
    image(
    fill (0.839844,1.230470)..controls (0.781250,1.230470) and (0.734375,1.179690)..(0.734375,1.121090)
	..controls (0.734375,1.085940) and (0.750000,1.054690)..(0.773438,1.035160)
	..controls (0.757813,1.035160) and (0.742188,1.035160)..(0.726563,1.035160)
	..controls (0.707031,1.035160) and (0.683594,1.035160)..(0.664063,1.031250)
	..controls (0.648438,1.066410) and (0.605469,1.097660)..(0.574219,1.109380)
	..controls (0.527344,1.058590) and (0.519531,1.007810)..(0.519531,0.960938)
	..controls (0.519531,0.906250) and (0.535156,0.863281)..(0.558594,0.832031)
	..controls (0.609375,0.800781) and (0.671875,0.785156)..(0.738281,0.785156)
	..controls (0.792969,0.785156) and (0.847656,0.796875)..(0.890625,0.816406)
	..controls (0.921875,0.851563) and (0.941406,0.898438)..(0.941406,0.949219)
	..controls (0.941406,0.984375) and (0.929688,1.015630)..(0.914063,1.042970)
	..controls (0.933594,1.062500) and (0.945313,1.089840)..(0.945313,1.121090)
	..controls (0.945313,1.179690) and (0.898438,1.230470)..(0.839844,1.230470)
	--cycle;
    ) scaled 0.25 shifted (0.75,0.4);

ducks.mug[9] := 
    image(
    fill (0.898438,1.144530)..controls (0.898438,1.125000) and (0.886719,1.113280)..(0.867188,1.113280)
	..controls (0.851563,1.113280) and (0.835938,1.125000)..(0.835938,1.144530)
	..controls (0.835938,1.160160) and (0.851563,1.171880)..(0.867188,1.171880)
	..controls (0.886719,1.171880) and (0.898438,1.160160)..(0.898438,1.144530)
	--cycle;
    ) scaled 0.25 shifted (0.75,0.4);

%Adapted from art by Freepik (https://www.freepik.com/)
%D It is supposed to be a "chullo" (Quechua/Aymara for winter hat)
%D Not exactly the same, but recognizable for other Peruvian countrymen

picture ducks.chullo[];
ducks.chullo[1] :=
    image(
    fill (0.781250,3.886720)..controls (0.781250,3.886720) and (1.066410,4.269530)..(1.253910,4.386720)
	..controls (1.441410,4.507810) and (2.093750,4.558590)..(2.367190,4.417970)
	..controls (2.644530,4.273440) and (2.902340,3.902340)..(2.820310,3.593750)
	..controls (2.738280,3.281250) and (2.570310,3.000000)..(2.570310,3.000000)
	..controls (2.570310,3.000000) and (2.406250,3.644530)..(1.699220,3.792970)
	..controls (0.988281,3.929690) and (0.781250,3.886720)..(0.781250,3.886720)
	--cycle;
    ) scaled 43/100 shifted (0.4,0.6); 

ducks.chullo[2] :=
    image(
    fill (2.304690,4.441410)..controls (2.304690,4.441410) and (2.179690,4.652340)..(2.390630,4.757810)
	..controls (2.601560,4.855470) and (2.843750,4.648440)..(2.820310,4.480470)
	..controls (2.785160,4.261720) and (2.667970,4.250000)..(2.585940,4.250000)
	..controls (2.585940,4.250000) and (2.351560,4.429690)..(2.304690,4.441410)
	--cycle;
    ) scaled 43/100 shifted (0.4,0.6);

ducks.chullo[3] :=
    image(
    fill (0.257813,3.097660)..controls (0.132813,3.238280) and (0.265625,3.457030)..(0.503906,3.750000)
	..controls (0.742188,4.042970) and (1.546880,3.960940)..(1.984380,3.730470)
	..controls (2.316410,3.558590) and (2.652340,3.222660)..(2.636720,2.824220)
	..controls (2.621090,2.417970) and (2.460940,2.429690)..(2.417970,2.429690)
	..controls (2.335940,2.417970) and (2.234380,2.417970)..(2.175780,2.476560)
	..controls (1.671880,3.226560) and (1.300780,3.261720)..(0.503906,3.132810)
	..controls (0.320313,3.109380) and (0.316406,3.042970)..(0.257813,3.097660)
	--cycle;
    ) scaled 43/100 shifted (0.4,0.6);

ducks.chullo[4] := 
    image(
    fill (1.726560,3.054690)..controls (1.726560,3.054690) and (1.824220,2.832030)..(1.773440,2.687500)
	..controls (1.718750,2.542970) and (1.359380,1.605470)..(1.660160,1.332030)
	..controls (1.964840,1.054690) and (2.281250,1.250000)..(2.410160,1.640630)
	..controls (2.542970,2.027340) and (2.492190,2.425780)..(2.492190,2.425780)
	..controls (2.492190,2.425780) and (2.078130,2.937500)..(1.726560,3.054690)
	--cycle;
    ) scaled 43/100 shifted (0.4,0.6);

ducks.chullo[5] :=
    image(
    fill (1.699220,3.058590)..controls (1.699220,3.058590) and (1.781250,2.750000)..(1.609380,2.488280)
	..controls (1.437500,2.226560) and (1.375000,1.808590)..(1.410160,1.550780)
	..controls (1.453130,1.191410) and (1.730470,1.167970)..(1.910160,1.199220)
	..controls (1.910160,1.199220) and (1.484380,1.335940)..(1.554690,1.738280)
	..controls (1.632810,2.183590) and (1.800780,2.597660)..(1.785160,2.816410)
	..controls (1.773440,3.031250) and (1.699220,3.058590)..(1.699220,3.058590)
	--cycle;
    ) scaled 43/100 shifted (0.4,0.6);

ducks.chullo[6] :=
    image(
    fill (1.750000,1.191410)--(1.750000,0.371094)--(1.835940,0.371094)
	--(1.792970,1.191410)--cycle;
    ) scaled 43/100 shifted (0.4,0.6);

ducks.chullo[7] :=
    image(
    fill (1.808590,0.410156)..controls (1.808590,0.410156) and (1.847660,0.468750)..(1.886720,0.464844)
	..controls (1.929690,0.453125) and (1.937500,0.406250)..(1.925780,0.390625)
	--(1.910160,0.382813)..controls (1.910160,0.382813) and (1.945310,0.375000)..(1.976560,0.382813)
	..controls (2.007810,0.382813) and (2.058590,0.281250)..(2.042970,0.246094)
	..controls (2.023440,0.214844) and (1.988280,0.207031)..(1.980470,0.207031)
	..controls (1.972660,0.207031) and (2.007810,0.175781)..(2.003910,0.144531)
	..controls (2.000000,0.121094) and (2.000000,0.085938)..(1.968750,0.082031)
	..controls (1.937500,0.074219) and (1.925780,0.109375)..(1.925780,0.109375)
	..controls (1.925780,0.109375) and (1.937500,0.035156)..(1.898440,0.015625)
	..controls (1.863280,-0.007812) and (1.824220,-0.023438)..(1.792970,-0.015625)
	..controls (1.761720,-0.003906) and (1.757810,0.031250)..(1.765630,0.050781)
	..controls (1.773440,0.066406) and (1.738280,-0.007812)..(1.710940,-0.007812)
	..controls (1.679690,-0.007812) and (1.640630,0.015625)..(1.636720,0.031250)
	..controls (1.632810,0.054688) and (1.632810,0.093750)..(1.656250,0.109375)
	..controls (1.679690,0.132813) and (1.617190,0.097656)..(1.601560,0.132813)
	..controls (1.585940,0.156250) and (1.558590,0.187500)..(1.566410,0.234375)
	..controls (1.578130,0.277344) and (1.585940,0.292969)..(1.609380,0.292969)
	..controls (1.632810,0.300781) and (1.582030,0.316406)..(1.597660,0.347656)
	..controls (1.617190,0.386719) and (1.609380,0.402344)..(1.640630,0.417969)
	..controls (1.667970,0.437500) and (1.687500,0.433594)..(1.695310,0.410156)
	..controls (1.707030,0.386719) and (1.703130,0.437500)..(1.726560,0.464844)
	..controls (1.753910,0.484375) and (1.804690,0.476563)..(1.804690,0.476563)
	--cycle;
    ) scaled 43/100 shifted (0.4,0.6);

picture ducks.shield[];
ducks.shield[1] := 
    image(
    fill fullsquare scaled 0.70 rotated 45 shifted (3/4,1/2);
    );

ducks.shield[2] := 
    image(
    for i = 1 upto 5:
        fill fullcircle scaled 1/10 shifted (1/5dir(72i-36)); 
    endfor
    fill fullcircle scaled 1/10;
    currentpicture := currentpicture rotated 45 shifted (3/4,1/2);
    );

ducks.shield[3] := 
    image(
    nofill fullsquare scaled 0.600 rotated 45 shifted (3/4,1/2);
    eofill fullsquare scaled 0.625 rotated 45 shifted (3/4,1/2);
    );

picture ducks.blush;
ducks.blush := 
    image(
    fill fullcircle scaled 0.17 shifted (1,1.485);
    fill fullcircle scaled 0.12 shifted (0.39,1.6); 
    clip currentpicture to
    fullcircle xscaled 1 yscaled 1.25 shifted (0.90,1.50);
    );

\stopMPinitializations

%D The most boring part as we only assemble the ducks here:
\startuseMPgraphic{metaducks:duck}
draw image(

\includeMPgraphic{\ducksparameter{backgroundhook}};

\ifconditional\c_ducks_water
draw ducks.water withcolor "\ducksparameter{watercolor}";
\fi

\ifconditional\c_ducks_sheep
draw ducks.sheep[1] withcolor "\ducksparameter{sheepcolor}";
\fi

\ifconditional\c_ducks_devil
draw ducks.devil[1]
\ifconditional\c_ducks_viking
    withcolor .2[\MPcolor{xcolorwhite},\MPcolor{xcolorbrown}]
\else
    withcolor "\ducksparameter{devilcolor}"
\fi
\fi
;

\ifconditional\c_ducks_conicalhat
draw ducks.conicalhat[1] withcolor .5[\MPcolor{xcolorblack},\MPcolor{\ducksparameter{conicalhatcolor}}];
draw ducks.conicalhat[2] withcolor .3[\MPcolor{xcolorblack},\MPcolor{\ducksparameter{conicalhatcolor}}];
\fi

%Body
draw ducks.body
\ifconditional\c_ducks_snowduck
    withcolor "\ducksparameter{snowduckcolor}"
\else
    \ifconditional\c_ducks_overleaf
        withcolor "overleafduck"
    \else
        withcolor "\ducksparameter{bodycolor}"
    \fi
\fi
;

%Head
draw ducks.head
\ifconditional\c_ducks_snowduck
    withcolor "\ducksparameter{snowduckcolor}"
\else
    \ifconditional\c_ducks_overleaf
        withcolor "overleafduck"
    \else
        withcolor "\ducksparameter{headcolor}"
    \fi
\fi
;

%D For muscovy ducks, quite
%D Caruncles around eyes
\ifconditional\c_ducks_caruncle
draw ducks.caruncle[1] withcolor "\ducksparameter{carunclecolor}";
\fi

\ifconditional\c_ducks_grumpy
draw ducks.grumpy withcolor "\ducksparameter{billcolor}";
\else
    \ifconditional\c_ducks_laughing
        draw ducks.laughing[1] withcolor .8[\MPcolor{xcolorblack},\MPcolor{\ducksparameter{billcolor}}];
        draw ducks.laughing[2] withcolor "\ducksparameter{billcolor}";
    \else
        \ifconditional\c_ducks_parrot
            draw ducks.parrot withcolor "\ducksparameter{billcolor}";
        \else
            draw ducks.bill withcolor "\ducksparameter{billcolor}";
        \fi
    \fi
\fi

\ifconditional\c_ducks_caruncle
draw ducks.caruncle[2] withcolor "\ducksparameter{carunclecolor}";
\fi

\ifconditional\c_ducks_blush
draw ducks.blush withcolor "\ducksparameter{blushcolor}";
\fi

\ifconditional\c_ducks_mask
draw ducks.mask withcolor "\ducksparameter{maskcolor}";
\fi

\includeMPgraphic{\ducksparameter{bodyhook}};

%D Eyes
draw ducks.eye withcolor
\ifconditional\c_ducks_snowduck
    "\ducksparameter{snowduckcolor}";
\else
    "\ducksparameter{eyecolor}";
\fi

%Pupil
draw ducks.pupil withcolor "\ducksparameter{pupilcolor}";

\ifconditional\c_ducks_conicalhat
    \ifconditional\c_ducks_clothing
        draw ducks.conicalhat[3]
        withcolor (.3[\MPcolor{xcolorblack}, \MPcolor{\ducksparameter{conicalhatcolor}}]);
    \else
        draw ducks.conicalhat[4]
        withcolor (.3[\MPcolor{xcolorblack}, \MPcolor{\ducksparameter{conicalhatcolor}}]);
    \fi
\fi

%D Shirt
\ifconditional\c_ducks_tshirt
draw ducks.tshirt withcolor "\ducksparameter{tshirtcolor}";
\fi

\ifconditional\c_ducks_tie
draw ducks.tie withcolor "\ducksparameter{tiecolor}";
\fi

\ifconditional\c_ducks_jacket
draw ducks.jacket withcolor "\ducksparameter{jacketcolor}";
\fi

\ifconditional\c_ducks_aodai
draw ducks.aodai withcolor "\ducksparameter{aodaicolor}";
\fi

\ifconditional\c_ducks_lapel
draw ducks.lapel withcolor "\ducksparameter{lapelcolor}";
\fi

\ifconditional\c_ducks_cape
draw ducks.cape withcolor "\ducksparameter{capecolor}";
\fi

\ifconditional\c_ducks_bowtie
draw ducks.bowtie withcolor "\ducksparameter{bowtiecolor}";
\fi

\ifconditional\c_ducks_necklace
draw ducks.necklace withcolor "\ducksparameter{necklacecolor}";
\fi

%D It doesn't convince me
\ifconditional\c_ducks_lei
draw ducks.lei;
\fi

\ifconditional\c_ducks_neckerchief
draw ducks.neckerchief[1] withcolor "\ducksparameter{neckerchiefcolor}";
draw ducks.neckerchief[2] withcolor "\ducksparameter{woggle}";
\fi

\ifconditional\c_ducks_buttons
    \ifconditional\c_ducks_jacket
    draw ducks.buttons[1] withcolor "\ducksparameter{buttonscolor}";
    \else
    draw ducks.buttons[2] withcolor "\ducksparameter{buttonscolor}";
    \fi
\fi

\includeMPgraphic{\ducksparameter{clothinghook}};

\ifconditional\c_ducks_shorthair
draw ducks.shorthair withcolor "\ducksparameter{haircolor}";
\fi

\ifconditional\c_ducks_longhair
draw ducks.longhair withcolor "\ducksparameter{haircolor}";
\fi

\ifconditional\c_ducks_crazyhair
draw ducks.crazyhair withcolor "\ducksparameter{haircolor}";
\fi

\ifconditional\c_ducks_recedinghair
draw ducks.recedinghair withcolor "\ducksparameter{haircolor}";
\fi

\ifconditional\c_ducks_mohican
draw ducks.mohican withcolor "\ducksparameter{haircolor}";
\fi

\ifconditional\c_ducks_mullet
draw ducks.mullet withcolor "\ducksparameter{haircolor}";
\fi

\ifconditional\c_ducks_parting
draw ducks.parting withcolor "\ducksparameter{haircolor}";
\fi

\ifconditional\c_ducks_eyebrow
draw ducks.eyebrow withcolor "\ducksparameter{eyebrowcolor}";
\fi

\ifconditional\c_ducks_beard
draw ducks.beard withcolor "\ducksparameter{beardcolor}";
\fi

\includeMPgraphic{\ducksparameter{hairhook}};

\ifconditional\c_ducks_alien
draw ducks.alien withcolor "\ducksparameter{aliencolor}";
\fi

\ifconditional\c_ducks_hat
    draw
    \ifconditional\c_ducks_hair
    ducks.hat[1]
    \else
    ducks.hat[2]
    \fi
    withcolor "\ducksparameter{hatcolor}";
\fi

\ifconditional\c_ducks_cap
draw ducks.cap withcolor "\ducksparameter{capcolor}";
\fi

\ifconditional\c_ducks_santa
draw ducks.santa[1] withcolor "\ducksparameter{santacolor}";
draw ducks.santa[2];
draw ducks.santa[3];
\fi

\ifconditional\c_ducks_chef
draw ducks.chef withcolor "\ducksparameter{chefcolor}";
\fi

\ifconditional\c_ducks_graduate
draw ducks.graduate[1] withcolor "\ducksparameter{graduatecolor}";
draw ducks.graduate[2] withcolor "\ducksparameter{tassel}";
\fi

\ifconditional\c_ducks_beret
draw ducks.beret withcolor "\ducksparameter{beretcolor}";
\fi

\ifconditional\c_ducks_unicorn
draw ducks.unicorn[1] withcolor "\ducksparameter{unicorncolor}";
draw ducks.unicorn[2] withcolor "\ducksparameter{bodycolor}";
\fi

\ifconditional\c_ducks_witch
draw ducks.witch withcolor "\ducksparameter{witchcolor}";
\fi

\ifconditional\c_ducks_crown
draw ducks.crown withcolor "\ducksparameter{crowncolor}";
\fi

\ifconditional\c_ducks_queencrown
draw ducks.queencrown withcolor "\ducksparameter{queencrowncolor}";
\fi

\ifconditional\c_ducks_kingcrown
draw ducks.kingcrown withcolor "\ducksparameter{kingcrowncolor}";
\fi

\ifconditional\c_ducks_bunny
draw ducks.bunny[1] withcolor "\ducksparameter{bunnycolor}";
draw ducks.bunny[2] withcolor "\ducksparameter{inear}";
\fi


\ifconditional\c_ducks_peakedcap
draw ducks.peakedcap withcolor "\ducksparameter{peakedcapcolor}";
\fi

\ifconditional\c_ducks_tophat
draw ducks.tophat withcolor "\ducksparameter{tophatcolor}";
\fi

\ifconditional\c_ducks_darthvader
draw ducks.darthvader withcolor "\ducksparameter{darthvadercolor}";
\fi

\ifconditional\c_ducks_harlequin
draw ducks.harlequin[1] withcolor \MPcolor{\ducksparameter{harlequincolor}};
draw ducks.harlequin[2] withcolor \MPcolor{\ducksparameter{niuqelrah}};
draw ducks.harlequin[3] withcolor \MPcolor{\ducksparameter{harlequincolor}};
draw ducks.harlequin[4] withcolor \MPcolor{\ducksparameter{niuqelrah}};
\fi

\ifconditional\c_ducks_strawhat
draw ducks.strawhat[1] withcolor \MPcolor{\ducksparameter{strawhatcolor}};
draw ducks.strawhat[2] withcolor \MPcolor{\ducksparameter{ribbon}};
draw ducks.strawhat[3] withcolor \MPcolor{\ducksparameter{strawhatcolor}};
\fi

\ifconditional\c_ducks_helmet
draw ducks.helmet[1] withcolor \MPcolor{\ducksparameter{helmetcolor}};
draw ducks.helmet[2] withcolor .7[\MPcolor{xcolorblack},\MPcolor{\ducksparameter{helmetcolor}}];
draw ducks.helmet[3] withcolor .5[\MPcolor{xcolorwhite},\MPcolor{\ducksparameter{helmetcolor}}];
\fi

\ifconditional\c_ducks_viking
draw ducks.viking[1] withcolor \MPcolor{\ducksparameter{vikingcolor}};
draw ducks.viking[2] withcolor .7[\MPcolor{xcolorblack},\MPcolor{\ducksparameter{vikingcolor}}];
draw ducks.viking[3] withcolor .5[\MPcolor{xcolorwhite},\MPcolor{\ducksparameter{vikingcolor}}];
\fi

\ifconditional\c_ducks_devil
draw ducks.devil[2]
\ifconditional\c_ducks_viking
    withcolor .2[\MPcolor{xcolorwhite},\MPcolor{xcolorbrown}]
\else
    withcolor \MPcolor{\ducksparameter{devilcolor}}
\fi
\fi
;

\ifconditional\c_ducks_chullo
draw ducks.chullo[1] withcolor "\ducksparameter{chullocolor}";
draw ducks.chullo[2] withcolor .50[black,\MPcolor{\ducksparameter{chullocolor}}];
draw ducks.chullo[3] withcolor .75[black,\MPcolor{\ducksparameter{chullocolor}}];
draw ducks.chullo[4] withcolor "\ducksparameter{chullocolor}";
draw ducks.chullo[5];
draw ducks.chullo[6];
draw ducks.chullo[7] withcolor "\ducksparameter{chullocolor}";
\fi

\ifconditional\c_ducks_conicalhat
draw ducks.conicalhat[5] withcolor \MPcolor{\ducksparameter{conicalhatcolor}};
\fi

\ifconditional\c_ducks_sailor
draw ducks.sailor withcolor \MPcolor{\ducksparameter{sailorcolor}};
\fi

\includeMPgraphic{\ducksparameter{hathook}};

\ifconditional\c_ducks_sunglasses
draw ducks.sunglasses withcolor \MPcolor{\ducksparameter{sunglassescolor}};
\fi

\ifconditional\c_ducks_glasses
draw ducks.glasses withcolor \MPcolor{\ducksparameter{glassescolor}};
\fi

\ifconditional\c_ducks_squareglasses
draw ducks.squareglasses withcolor \MPcolor{\ducksparameter{squareglassescolor}};
\fi


\ifconditional\c_ducks_icecream
draw ducks.icecream[1] withcolor \MPcolor{\ducksparameter{icecreamcolor}};
draw ducks.icecream[2] withcolor \MPcolor{\ducksparameter{flavora}};
draw ducks.icecream[3] withcolor \MPcolor{\ducksparameter{flavorb}};
draw ducks.icecream[4] withcolor \MPcolor{\ducksparameter{flavorc}};
\fi

\ifconditional\c_ducks_book
draw ducks.book withcolor \MPcolor{\ducksparameter{bookcolor}};
draw thetextext("\ducksparameter{booktext}", origin) rotated -20 scaled (0.5/(1cm)) shifted (0.88,0.70) 
    withcolor 1;
\fi

\ifconditional\c_ducks_speech
draw ducks.speech withcolor \MPcolor{\ducksparameter{bubblecolor}};
draw thetextext("\ducksparameter{speechtext}", origin) scaled (1/(1cm)) shifted (-0.5,1.8);
\fi

\ifconditional\c_ducks_signpost
draw ducks.signpost[1] withcolor \MPcolor{\ducksparameter{signcolor}};
draw ducks.signpost[2] withcolor \MPcolor{\ducksparameter{signback}};
draw image(
picture tmp;
tmp := thetextext("\ducksparameter{signtext}", origin) scaled (1/(1cm));
draw tmp shifted (-center tmp) shifted (0.85,2.05) withcolor \MPcolor{\ducksparameter{signtextcolor}};
) rotated -20;
\fi

\ifconditional\c_ducks_think
draw ducks.think withcolor \MPcolor{\ducksparameter{bubblecolor}};
draw thetextext("\ducksparameter{thinktext}", origin) scaled (1/(1cm)) shifted (2,2.4);
\fi

\ifconditional\c_ducks_magicwand
draw ducks.magicwand;
\fi

\ifconditional\c_ducks_cricket
draw ducks.cricket withcolor \MPcolor{\ducksparameter{cricketcolor}};
\fi

\ifconditional\c_ducks_rollingpin
draw ducks.rollingpin withcolor \MPcolor{\ducksparameter{rollingpincolor}};
\fi

\ifconditional\c_ducks_lightsaber
draw ducks.lightsaber[1] withcolor \MPcolor{\ducksparameter{lightsabercolor}};
draw ducks.lightsaber[2] withcolor .8[\MPcolor{xcolorblack},\MPcolor{xcolorgray}];
\fi

\ifconditional\c_ducks_cake
draw ducks.cake[1] withcolor \MPcolor{\ducksparameter{cakecolor}};
draw ducks.cake[2] withcolor .5[\MPcolor{xcolorwhite},\MPcolor{\ducksparameter{cakecolor}}];
draw ducks.cake[3] withcolor .85[\MPcolor{xcoloryellow},\MPcolor{xcolorwhite}];
\fi

\ifconditional\c_ducks_pizza
draw ducks.pizza;
\fi

\ifconditional\c_ducks_hockey
draw ducks.hockey withcolor "\ducksparameter{hockeycolor}";
\fi

\ifconditional\c_ducks_baguette
draw ducks.baguette[1] withcolor .7[\MPcolor{xcolorwhite},\MPcolor{\ducksparameter{baguettecolor}}];
draw ducks.baguette[2] withcolor .8[\MPcolor{xcolorblack},\MPcolor{\ducksparameter{baguettecolor}}];
\fi

\ifconditional\c_ducks_football
draw ducks.football[1] withcolor "\ducksparameter{footballcolor}";
draw ducks.football[2] withcolor 0;
\fi

\ifconditional\c_ducks_milkshake
draw ducks.milkshake[1] withcolor .1[\MPcolor{xcolorwhite},\MPcolor{xcolorcyan}];
draw ducks.milkshake[2] withcolor "\ducksparameter{milkshakecolor}";
draw ducks.milkshake[3] withcolor .85[\MPcolor{xcoloryellow},\MPcolor{xcolorwhite}];
draw ducks.milkshake[4] withcolor .10[\MPcolor{xcolorred},\MPcolor{xcolorblack}];
draw ducks.milkshake[5] withcolor .15[\MPcolor{xcolorwhite},\MPcolor{xcoloryellow}];
draw ducks.milkshake[6] withcolor .1[\MPcolor{xcolorwhite},\MPcolor{xcolorcyan}];
draw ducks.milkshake[7] withcolor .9[\MPcolor{xcolorblack},\MPcolor{xcolorred}];
\fi

\ifconditional\c_ducks_wine
draw ducks.wine[1] withcolor .1[\MPcolor{xcolorwhite},\MPcolor{xcolorcyan}];
draw ducks.wine[2] withcolor "\ducksparameter{winecolor}";
\fi

\ifconditional\c_ducks_prison
draw ducks.prison[1] withcolor "\ducksparameter{prisoncolor}";
draw ducks.prison[2] withcolor "\ducksparameter{prisoncolor}";
\fi

\ifconditional\c_ducks_torch
draw ducks.torch[1] withcolor .5[\MPcolor{xcolorred},\MPcolor{xcoloryellow}];
draw ducks.torch[2] withcolor .75[\MPcolor{xcolorred},\MPcolor{xcoloryellow}];
draw ducks.torch[3] withcolor .5[\MPcolor{xcolorwhite},\MPcolor{xcoloryellow}];
draw ducks.torch[4] withcolor "\ducksparameter{torchcolor}";
\fi

\ifconditional\c_ducks_sheep
draw ducks.sheep[2] withcolor \MPcolor{\ducksparameter{billcolor}};
\fi

\ifconditional\c_ducks_basket
draw ducks.basket[1] withcolor "\ducksparameter{basketcolor}";
draw ducks.basket[2] withcolor .75[\MPcolor{xcolorblack},\MPcolor{\ducksparameter{basketcolor}}];
\fi

\ifconditional\c_ducks_easter
draw ducks.easter[1] withcolor "\ducksparameter{egga}";
draw ducks.easter[2] withcolor "\ducksparameter{eggb}";
draw ducks.easter[3] withcolor "\ducksparameter{eggc}"; 
\fi

\ifconditional\c_ducks_horsetail
draw ducks.horsetail withcolor "\ducksparameter{horsetailcolor}";
\fi

\ifconditional\c_ducks_crozier
draw ducks.crozier withcolor "\ducksparameter{croziercolor}";
\fi

\ifconditional\c_ducks_stethoscope
draw ducks.stethoscope withcolor "\ducksparameter{stethoscopecolor}";
\fi

\ifconditional\c_ducks_snowduck
draw ducks.snowduck withcolor 0;
\fi

\ifconditional\c_ducks_vampire
\ifconditional\c_ducks_laughing
    draw ducks.vampire[1]
\else
    draw ducks.vampire[2]
\fi
withcolor \MPcolor{\ducksparameter{vampirecolor}};
\fi

\ifconditional\c_ducks_crystalball
draw image(
fill fullcircle scaled 0.66 shifted (0.93,0.5)
withshademethod "circular"
withshadecolors 
    (  \MPcolor{\ducksparameter{crystalballcolor}},
    .3[\MPcolor{xcolorblack},
       \MPcolor{\ducksparameter{crystalballcolor}}])
withtransparency ("normal",0.7);
);
\fi

\ifconditional\c_ducks_cheese
draw ducks.cheese[1] withcolor "\ducksparameter{cheesecolor}";
draw ducks.cheese[2] withcolor .35[\MPcolor{xcolorwhite},\MPcolor{\ducksparameter{cheesecolor}}];
draw ducks.cheese[3] withcolor "\ducksparameter{cheesecolor}";
\fi

\ifconditional\c_ducks_shovel
draw ducks.shovel[1] withcolor 0.8[\MPcolor{xcolorblack},\MPcolor{xcolorbrown}];
draw ducks.shovel[2] withcolor "\ducksparameter{shovelcolor}";
\fi

\ifconditional\c_ducks_pickaxe
draw ducks.pickaxe[1] withcolor 0.8[\MPcolor{xcolorblack},\MPcolor{xcolorbrown}];
draw ducks.pickaxe[2] withcolor "\ducksparameter{pickaxecolor}";
\fi

\ifconditional\c_ducks_umbrella
draw ducks.umbrella[1] withcolor \MPcolor{xcolorgray};
draw ducks.umbrella[2] withcolor "\ducksparameter{umbrellacolor}";
\fi

\ifconditional\c_ducks_umbrellaclosed
draw ducks.umbrellaclosed[1] withcolor \MPcolor{xcolorgray};
draw ducks.umbrellaclosed[2] withcolor "\ducksparameter{umbrellaclosedcolor}";
\fi

\ifconditional\c_ducks_handbag
draw ducks.handbag[1] withcolor "\ducksparameter{handbagcolor}";
draw ducks.handbag[2] withcolor .7[\MPcolor{xcolorblack},\MPcolor{\ducksparameter{handbagcolor}}];
\fi

\ifconditional\c_ducks_cocktail
draw ducks.cocktail;
\fi

\ifconditional\c_ducks_mug

draw ducks.mug[1] withcolor "\ducksparameter{mugcolor}";
draw ducks.mug[2] withcolor 0.9;
draw ducks.mug[3] withcolor "\ducksparameter{mugcolor}";
draw ducks.mug[4] withcolor 0.8;
draw ducks.mug[5] withcolor .5[\MPcolor{xcolorbrown},\MPcolor{xcolorblack}];
draw ducks.mug[6] withcolor .2[\MPcolor{\ducksparameter{mugcolor}},black];
draw ducks.mug[7] withcolor "\ducksparameter{billcolor}";
draw ducks.mug[8] withcolor "\ducksparameter{bodycolor}";
draw ducks.mug[9] withcolor "\ducksparameter{pupilcolor}";
\fi

\ifconditional\c_ducks_shield
draw ducks.shield[1] withcolor "\ducksparameter{shieldcolor}";
draw ducks.shield[2] withcolor 1;
draw ducks.shield[3] withcolor 1;
\fi

\ifconditional\c_ducks_overleaf
draw ducks.overleaf withcolor 1;
\fi

\ifconditional\c_ducks_wing
draw ducks.wing withcolor "\ducksparameter{wingcolor}";
\fi

\includeMPgraphic{\ducksparameter{foregroundhook}};

%D So that \type{unitsize=2em} and related work.
currentpicture := currentpicture scaled \the\dimexpr\ducksparameter{unitsize}\relax ;
);
\stopuseMPgraphic 

%Magichat still missing :(
%D Randomizers
\startluacode
local implement = interfaces.implement

local ducks_head_ornaments = {
    "shorthair", "longhair", "crazyhair", "mohican", "mullet", "beard", "alien",
    "hat", "cap", "santa", "chef", "graduate", "beret", "witch",
    "crown", "bunny", "peakedcap", "tophat", "queencrown", "kingcrown",
    "harlequin", "strawhat", "parting", "helmet", "devil", "chullo"
}

local ducks_other_ornaments = {
    "glasses", "sunglasses", "icecream", "book", "signpost", "magicwand",
    "cricket", "rollingpin", "lightsaber", "cake", "pizza", "mug", "hockey",
    "baguette", "football", "mask", "necklace", "milkshake", "wine", "prison",
    "cape", "torch", "crozier", "easter", "stethoscope", "neckerchief", "cheese",
    "shovel", "pickaxe", "crystalball", "lei", "shield"
}

implement{
    name    = "randomduckhead",
    public  = true,
    actions = function()
        local rnd = math.random(1,#ducks_head_ornaments)
        context(ducks_head_ornaments[rnd])
    end
}

implement{
    name    = "randomduckaccessory",
    public  = true,
    actions = function()
        local rnd = math.random(1,#ducks_other_ornaments)
        context(ducks_other_ornaments[rnd])
    end
}

\stopluacode

%D Ducks per se are defined here:
\unexpanded\def\ducks
  {\begingroup%
   \dosingleempty\doducks}

\def\doducks[#parameters]%
  {\iffirstargument
     \setupducks[#parameters]%
   \fi
    \quitvmode\useMPgraphic{metaducks:duck}%
   \endgroup}

\unexpanded\def\randomducks
  {\begingroup%
   \dosingleempty\dorandomducks}

\def\dorandomducks[#parameters]%
  {\iffirstargument
     \setupducks[#parameters,\randomduckhead=\v!yes,\randomduckaccessory=\v!yes]%
   \else
     \setupducks[\randomduckhead=\v!yes,\randomduckaccessory=\v!yes]%
   \fi
    \quitvmode\useMPgraphic{metaducks:duck}%
   \endgroup}

%D This will make this module incompatible with TikZducks.
%D But, considering users will have to choose first, it's fine.
\let\duck\ducks
\let\randomduck\randomducks
\let\setupduck\setupducks

\protect

\stopmodule

\continueifinputfile{t-metaducks.mkvi}

\starttext
     \dorecurse{100}{
         \startTEXpage
             \randomducks
         \stopTEXpage
     }
\stoptext